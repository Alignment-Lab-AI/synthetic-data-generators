prompt,chosen,__index_level_0__
Human: Write a Python function which follows this instruction:  Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal. Assistant: ,"def count_Pairs(arr,n): 
    cnt = 0; 
    for i in range(n): 
        for j in range(i + 1,n): 
            if (arr[i] != arr[j]): 
                cnt += 1; 
    return cnt; ",437
Human: Write a Python function which follows this instruction:  Write a function to find number of lists present in the given tuple. Assistant: ,"def find_lists(Input): 
	if isinstance(Input, list): 
		return 1
	else: 
		return len(Input) ",253
"Human: Write a Python function which follows this instruction: Given a string representing a space separated lowercase letters, return a dictionary of the letter with the most repetition and containing the corresponding count. If several letters have the same occurrence, return all of them. Assistant: ","
def histogram(test):
    dict1={}
    list1=test.split("" "")
    t=0

    for i in list1:
        if(list1.count(i)>t) and i!='':
            t=list1.count(i)
    if t>0:
        for i in list1:
            if(list1.count(i)==t):
                
                dict1[i]=t
    return dict1",111
Human: Write a Python function which follows this instruction: Return True if all numbers in the list l are below threshold t. Assistant: ,"
def below_threshold(l: list, t: int):
    for e in l:
        if e >= t:
            return False
    return True",52
Human: Write a Python function which follows this instruction:  Write a python function to find the maximum difference between any two elements in a given array. Assistant: ,"def max_Abs_Diff(arr): 
    n = len(arr)
    minEle = arr[0] 
    maxEle = arr[0] 
    for i in range(1, n): 
        minEle = min(minEle,arr[i]) 
        maxEle = max(maxEle,arr[i]) 
    return (maxEle - minEle) ",254
Human: Write a Python function which follows this instruction:  Write a function to add a dictionary to the tuple. The output should be a tuple. Assistant: ,"def add_dict_to_tuple(test_tup, test_dict):
  test_tup = list(test_tup)
  test_tup.append(test_dict)
  test_tup = tuple(test_tup)
  return (test_tup) ",508
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of the per-digit difference between two integers. Assistant: ,"def digit_distance_nums(n1, n2):
         return sum(map(int,str(abs(n1-n2))))",432
"Human: Write a Python function which follows this instruction: From a given list of integers, generate a list of rolling maximum element found until given moment in the sequence. Assistant: ","from typing import List, Tuple

def rolling_max(numbers: List[int]) -> List[int]:
    running_max = None
    result = []

    for n in numbers:
        if running_max is None:
            running_max = n
        else:
            running_max = max(running_max, n)

        result.append(running_max)

    return result",9
Human: Write a Python function which follows this instruction:  Write a function to flatten the list of lists into a single set of numbers. Assistant: ,"def extract_singly(test_list):
  res = []
  temp = set()
  for inner in test_list:
    for ele in inner:
      if not ele in temp:
        temp.add(ele)
        res.append(ele)
  return (res) ",250
Human: Write a Python function which follows this instruction: sum_to_n is a function that sums numbers from 1 to n. Assistant: ,"
def sum_to_n(n: int):
    return sum(range(n + 1))",60
Human: Write a Python function which follows this instruction:  Write a python function to find the difference between largest and smallest value in a given list. Assistant: ,"def big_diff(nums):
     diff= max(nums)-min(nums)
     return diff",458
"Human: Write a Python function which follows this instruction: Given a positive integer N, return the total sum of its digits in binary.  Variables: @N integer Constraints: 0 ≤ N ≤ 10000. Output: a string of binary number Assistant: ","
def solve(N):
    return bin(sum(int(i) for i in str(N)))[2:]",84
Human: Write a Python function which follows this instruction:  Write a function to find the size of the largest subset of a list of numbers so that every pair is divisible. Assistant: ,"def largest_subset(a):
	n = len(a)
	dp = [0 for i in range(n)]
	dp[n - 1] = 1; 
	for i in range(n - 2, -1, -1):
		mxm = 0;
		for j in range(i + 1, n):
			if a[j] % a[i] == 0 or a[i] % a[j] == 0:
				mxm = max(mxm, dp[j])
		dp[i] = 1 + mxm
	return max(dp)",487
"Human: Write a Python function which follows this instruction:  Imagine a road that's a perfectly straight infinitely long line. n cars are driving left to right;  simultaneously, a different set of n cars are driving right to left.   The two sets of cars start out being very far from each other.  All cars move in the same speed.  Two cars are said to collide when a car that's moving left to right hits a car that's moving right to left. However, the cars are infinitely sturdy and strong; as a result, they continue moving in their trajectory as if they did not collide.  This function outputs the number of such collisions. Assistant: ","
def car_race_collision(n: int):
    return n**2",41
Human: Write a Python function which follows this instruction:  Write a python function to check whether the given number is even or not. Assistant: ,"def is_Even(n) : 
    if (n^1 == n+1) :
        return True; 
    else :
        return False; ",470
Human: Write a Python function which follows this instruction:  Write function to find the sum of all items in the given dictionary. Assistant: ,"def return_sum(dict):
  sum = 0
  for i in dict.values():
    sum = sum + i
  return sum",577
Human: Write a Python function which follows this instruction:  Write a function to convert the given snake case string to camel case string. Assistant: ,"import re
def snake_to_camel(word):
  return ''.join(x.capitalize() or '_' for x in word.split('_'))",365
Human: Write a Python function which follows this instruction:  Write a python function to remove the characters which have odd index values of a given string. Assistant: ,"def odd_values_string(str):
  result = """" 
  for i in range(len(str)):
    if i % 2 == 0:
      result = result + str[i]
  return result",270
Human: Write a Python function which follows this instruction:  Write a function to sort each sublist of strings in a given list of lists. Assistant: ,"def sort_sublists(list1):
    result = list(map(sorted,list1)) 
    return result",442
Human: Write a Python function which follows this instruction:  Write a python function to check whether a list of numbers contains only one distinct element or not. Assistant: ,"def unique_Element(arr):
    s = set(arr)
    return len(s) == 1",546
Human: Write a Python function which follows this instruction:  Write a python function to find smallest number in a list. Assistant: ,"def smallest_num(xs):
  return min(xs)
",184
Human: Write a Python function which follows this instruction:  Write a python function to find the first digit of a given number. Assistant: ,"def first_Digit(n) :  
    while n >= 10:  
        n = n / 10 
    return int(n) ",427
Human: Write a Python function which follows this instruction:  Write a function to find the list with maximum length. Assistant: ,"def max_length_list(input_list):
    max_length = max(len(x) for x in input_list )   
    max_list = max(input_list, key = lambda i: len(i))    
    return(max_length, max_list)",349
Human: Write a Python function which follows this instruction:  Write a function to add the given tuple to the given list. Assistant: ,"def add_tuple(test_list, test_tup):
  test_list += test_tup
  return test_list",536
Human: Write a Python function which follows this instruction:  Write a function to trim each tuple by k in the given tuple list. Assistant: ,"def trim_tuple(test_list, K):
  res = []
  for ele in test_list:
    N = len(ele)
    res.append(tuple(list(ele)[K: N - K]))
  return (str(res)) ",396
Human: Write a Python function which follows this instruction:  Write a function to check whether it follows the sequence given in the patterns array. Assistant: ,"def is_samepatterns(colors, patterns):    
    if len(colors) != len(patterns):
        return False    
    sdict = {}
    pset = set()
    sset = set()    
    for i in range(len(patterns)):
        pset.add(patterns[i])
        sset.add(colors[i])
        if patterns[i] not in sdict.keys():
            sdict[patterns[i]] = []

        keys = sdict[patterns[i]]
        keys.append(colors[i])
        sdict[patterns[i]] = keys

    if len(pset) != len(sset):
        return False   

    for values in sdict.values():

        for i in range(len(values) - 1):
            if values[i] != values[i+1]:
                return False

    return True",195
Human: Write a Python function which follows this instruction: Test if given string is a palindrome return string == string[::-1]   def make_palindrome(string: str) -> str: Assistant: ,"
def is_palindrome(string: str) -> bool:
    if not string:
        return ''

    beginning_of_suffix = 0

    while not is_palindrome(string[beginning_of_suffix:]):
        beginning_of_suffix += 1

    return string + string[:beginning_of_suffix][::-1]",10
Human: Write a Python function which follows this instruction:  Write a function to maximize the given two tuples. Assistant: ,"def maximize_elements(test_tup1, test_tup2):
  res = tuple(tuple(max(a, b) for a, b in zip(tup1, tup2))
   for tup1, tup2 in zip(test_tup1, test_tup2))
  return (res) ",297
Human: Write a Python function which follows this instruction:  Write a function to check if the given number is woodball or not. Assistant: ,"def is_woodall(x): 
	if (x % 2 == 0): 
		return False
	if (x == 1): 
		return True
	x = x + 1 
	p = 0
	while (x % 2 == 0): 
		x = x/2
		p = p + 1
		if (p == x): 
			return True
	return False",178
"Human: Write a Python function which follows this instruction: Task We are given two strings s and c, you have to deleted all the characters in s that are equal to any character in c then check if the result string is palindrome. A string is called palindrome if it reads the same backward as forward. You should return a tuple containing the result string and True/False for the check. Assistant: ","
def reverse_delete(s,c):
    s = ''.join([char for char in s if char not in c])
    return (s,s[::-1] == s)",112
Human: Write a Python function which follows this instruction: Return a greatest common divisor of two integers a and b Assistant: ,"
def greatest_common_divisor(a: int, b: int) -> int:
    while b:
        a, b = b, a % b
    return a",13
Human: Write a Python function which follows this instruction:  Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not. Assistant: ,"def is_Sum_Of_Powers_Of_Two(n): 
    if (n % 2 == 1): 
        return False
    else: 
        return True",248
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of the product of consecutive binomial co-efficients. Assistant: ,"def binomial_Coeff(n,k): 
    C = [0] * (k + 1); 
    C[0] = 1; # nC0 is 1 
    for i in range(1,n + 1):  
        for j in range(min(i, k),0,-1): 
            C[j] = C[j] + C[j - 1]; 
    return C[k]; 
def sum_Of_product(n): 
    return binomial_Coeff(2 * n,n - 1); ",462
Human: Write a Python function which follows this instruction:  Write a function to find squares of individual elements in a list. Assistant: ,"def square_nums(nums):
 square_nums = list(map(lambda x: x ** 2, nums))
 return square_nums",169
Human: Write a Python function which follows this instruction:  Write a function to calculate the maximum aggregate from the list of tuples. Assistant: ,"from collections import defaultdict
def max_aggregate(stdata):
    temp = defaultdict(int)
    for name, marks in stdata:
        temp[name] += marks
    return max(temp.items(), key=lambda x: x[1])",332
Human: Write a Python function which follows this instruction: The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows: fibfib(0) == 0 fibfib(1) == 0 fibfib(2) == 1 fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3). Please write a function to efficiently compute the n-th element of the fibfib number sequence. Assistant: ,"
def fibfib(n: int):
    if n == 0:
        return 0
    if n == 1:
        return 0
    if n == 2:
        return 1
    return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",63
"Human: Write a Python function which follows this instruction:  Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary. Assistant: ","def frequency_lists(list1):
    list1 = [item for sublist in list1 for item in sublist]
    dic_data = {}
    for num in list1:
        if num in dic_data.keys():
            dic_data[num] += 1
        else:
            key = num
            value = 1
            dic_data[key] = value
    return dic_data
",215
Human: Write a Python function which follows this instruction:  Write a function to get a colon of a tuple. Assistant: ,"from copy import deepcopy
def colon_tuplex(tuplex,m,n):
  tuplex_colon = deepcopy(tuplex)
  tuplex_colon[m].append(n)
  return tuplex_colon",338
Human: Write a Python function which follows this instruction:  Write a function to concatenate each element of tuple by the delimiter. Assistant: ,"def concatenate_tuple(test_tup):
    delim = ""-""
    res = ''.join([str(ele) + delim for ele in test_tup])
    res = res[ : len(res) - len(delim)]
    return (str(res)) ",374
Human: Write a Python function which follows this instruction:  Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php Assistant: ,"def divisible_by_digits(startnum, endnum):
    return [n for n in range(startnum, endnum+1) \
                if not any(map(lambda x: int(x) == 0 or n%int(x) != 0, str(n)))]",531
Human: Write a Python function which follows this instruction:  Write a function to find k number of smallest pairs which consist of one element from the first array and one element from the second array. Assistant: ,"import heapq
def k_smallest_pairs(nums1, nums2, k):
   queue = []
   def push(i, j):
       if i < len(nums1) and j < len(nums2):
           heapq.heappush(queue, [nums1[i] + nums2[j], i, j])
   push(0, 0)
   pairs = []
   while queue and len(pairs) < k:
       _, i, j = heapq.heappop(queue)
       pairs.append([nums1[i], nums2[j]])
       push(i, j + 1)
       if j == 0:
           push(i + 1, 0)
   return pairs",362
Human: Write a Python function which follows this instruction:  Write a python function to find the last digit in factorial of a given number. Assistant: ,"def last_Digit_Factorial(n): 
    if (n == 0): return 1
    elif (n <= 2): return n  
    elif (n == 3): return 6
    elif (n == 4): return 4 
    else: 
      return 0",447
Human: Write a Python function which follows this instruction:  Write a function to find the third side of a right angled triangle. Assistant: ,"import math
def otherside_rightangle(w,h):
  s=math.sqrt((w*w)+(h*h))
  return s",327
Human: Write a Python function which follows this instruction:  Check if two words have the same characters. Assistant: ,"
def same_chars(s0: str, s1: str):
    return set(s0) == set(s1)",54
Human: Write a Python function which follows this instruction:  Write a function to create the next bigger number by rearranging the digits of a given number. Assistant: ,"def rearrange_bigger(n):
    nums = list(str(n))
    for i in range(len(nums)-2,-1,-1):
        if nums[i] < nums[i+1]:
            z = nums[i:]
            y = min(filter(lambda x: x > z[0], z))
            z.remove(y)
            z.sort()
            nums[i:] = [y] + z
            return int("""".join(nums))
    return False",361
Human: Write a Python function which follows this instruction:  Write a function to find words that are longer than n characters from a given list of words. Assistant: ,"def long_words(n, str):
    word_len = []
    txt = str.split("" "")
    for x in txt:
        if len(x) > n:
            word_len.append(x)
    return word_len	",240
"Human: Write a Python function which follows this instruction:  Given a positive integer n, return a sorted list that has the odd numbers in collatz sequence.  The Collatz conjecture is a conjecture in mathematics that concerns a sequence defined as follows: start with any positive integer n. Then each term is obtained from the previous term as follows: if the previous term is even, the next term is one half of the previous term. If the previous term is odd, the next term is 3 times the previous term plus 1. The conjecture is that no matter what value of n, the sequence will always reach 1.  Note: 1. Collatz(1) is [1]. 2. returned list sorted in increasing order. Assistant: ","
def get_odd_collatz(n):
    if n%2==0:
        odd_collatz = [] 
    else:
        odd_collatz = [n]
    while n > 1:
        if n % 2 == 0:
            n = n/2
        else:
            n = n*3 + 1
            
        if n%2 == 1:
            odd_collatz.append(int(n))

    return sorted(odd_collatz)",123
Human: Write a Python function which follows this instruction:  Write a function to find the directrix of a parabola. Assistant: ,"def parabola_directrix(a, b, c): 
  directrix=((int)(c - ((b * b) + 1) * 4 * a ))
  return directrix",382
Human: Write a Python function which follows this instruction:  Write a function to remove lowercase substrings from a given string. Assistant: ,"import re
def remove_lowercase(str1):
 return re.sub('[a-z]', '', str1)",426
Human: Write a Python function which follows this instruction:  Write a function to get the sum of the digits of a non-negative integer. Assistant: ,"def sum_digits(n):
  if n == 0:
    return 0
  else:
    return n % 10 + sum_digits(int(n / 10))",439
Human: Write a Python function which follows this instruction:  Write a function to find perfect squares between two given numbers. Assistant: ,"def perfect_squares(a, b):
    lists=[]
    for i in range (a,b+1):
        j = 1;
        while j*j <= i:
            if j*j == i:
                 lists.append(i)  
            j = j+1
        i = i+1
    return lists",459
Human: Write a Python function which follows this instruction: You are given a word. Your task is to find the closest vowel that stands between two consonants from the right side of the word (case sensitive).  Vowels in the beginning and ending doesn't count. Return empty string if you didn't find any vowel met the above condition.  You may assume that the given string contains English letter only. Assistant: ,"
def get_closest_vowel(word):
    if len(word) < 3:
        return """"

    vowels = {""a"", ""e"", ""i"", ""o"", ""u"", ""A"", ""E"", 'O', 'U', 'I'}
    for i in range(len(word)-2, 0, -1):
        if word[i] in vowels:
            if (word[i+1] not in vowels) and (word[i-1] not in vowels):
                return word[i]
    return """"",118
Human: Write a Python function which follows this instruction:  Write a function to sort the given array by using shell sort. Assistant: ,"def shell_sort(my_list):
    gap = len(my_list) // 2
    while gap > 0:
        for i in range(gap, len(my_list)):
            current_item = my_list[i]
            j = i
            while j >= gap and my_list[j - gap] > current_item:
                my_list[j] = my_list[j - gap]
                j -= gap
            my_list[j] = current_item
        gap //= 2

    return my_list",380
Human: Write a Python function which follows this instruction:  Write a function to merge three lists into a single sorted list. Assistant: ,"import heapq
def merge_sorted_list(num1,num2,num3):
  num1=sorted(num1)
  num2=sorted(num2)
  num3=sorted(num3)
  result = heapq.merge(num1,num2,num3)
  return list(result)",225
"Human: Write a Python function which follows this instruction:  Given a positive integer n, you have to make a pile of n levels of stones. The first level has n stones. The number of stones in the next level is: - the next odd number if n is odd. - the next even number if n is even. Return the number of stones in each level in a list, where element at index i represents the number of stones in the level (i+1). Assistant: ","
def make_a_pile(n):
    return [n + 2*i for i in range(n)]",100
Human: Write a Python function which follows this instruction:  Write a function to find nth centered hexagonal number. Assistant: ,"def centered_hexagonal_number(n):
  return 3 * n * (n - 1) + 1",204
Human: Write a Python function which follows this instruction:  Write a function to extract the number of unique tuples in the given list. Assistant: ,"def extract_freq(test_list):
  res = len(list(set(tuple(sorted(sub)) for sub in test_list)))
  return (res)",356
Human: Write a Python function which follows this instruction:  Write a python function to find the smallest power of 2 greater than or equal to n. Assistant: ,"def next_power_of_2(n): 
  if n and not n & (n - 1):
    return n

  count = 0
  while n != 0: 
    n >>= 1
    count += 1

  return 1 << count; ",262
Human: Write a Python function which follows this instruction:  Write a function to check if a string represents an integer or not. Assistant: ,"def check_integer(text):
 text = text.strip()
 if len(text) < 1:
    return None
 else:
     if all(text[i] in ""0123456789"" for i in range(len(text))):
          return True
     elif (text[0] in ""+-"") and \
         all(text[i] in ""0123456789"" for i in range(1,len(text))):
         return True
     else:
        return False",228
Human: Write a Python function which follows this instruction:  Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. Assistant: ,"import re
def text_lowercase_underscore(text):
        patterns = '^[a-z]+_[a-z]+$'
        if re.search(patterns,  text):
                return True
        else:
                return False",174
Human: Write a Python function which follows this instruction:  Write a function to remove all whitespaces from the given string. Assistant: ,"import re
def remove_whitespaces(text1):
  return (re.sub(r'\s+', '',text1))",402
Human: Write a Python function which follows this instruction: Return list of prime factors of given integer in the order from smallest to largest. Each of the factors should be listed number of times corresponding to how many times it appeares in factorization. Input number should be equal to the product of all factors Assistant: ,"from typing import List

def factorize(n: int) -> List[int]:
    import math
    fact = []
    i = 2
    while i <= int(math.sqrt(n) + 1):
        if n % i == 0:
            fact.append(i)
            n //= i
        else:
            i += 1

    if n > 1:
        fact.append(n)
    return fact",25
"Human: Write a Python function which follows this instruction:  Write a function to find the next smallest palindrome of a specified integer, returned as an integer. Assistant: ","import sys
def next_smallest_palindrome(num):
    numstr = str(num)
    for i in range(num+1,sys.maxsize):
        if str(i) == str(i)[::-1]:
            return i",218
"Human: Write a Python function which follows this instruction:  Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}. Assistant: ","def multiply_elements(test_tup):
  res = tuple(i * j for i, j in zip(test_tup, test_tup[1:]))
  return (res) ",514
Human: Write a Python function which follows this instruction:  Write a function to check whether the given month number contains 31 days or not. Assistant: ,"def check_monthnumb_number(monthnum2):
  if(monthnum2==1 or monthnum2==3 or monthnum2==5 or monthnum2==7 or monthnum2==8 or monthnum2==10 or monthnum2==12):
    return True
  else:
    return False",406
Human: Write a Python function which follows this instruction:  Write a python function to count the number of positive numbers in a list. Assistant: ,"def pos_count(list):
  pos_count= 0
  for num in list: 
    if num >= 0: 
      pos_count += 1
  return pos_count ",188
Human: Write a Python function which follows this instruction:  Write a function to calculate whether the matrix is a magic square. Assistant: ,"def magic_square_test(my_matrix):
    iSize = len(my_matrix[0])
    sum_list = []
    sum_list.extend([sum (lines) for lines in my_matrix])   
    for col in range(iSize):
        sum_list.append(sum(row[col] for row in my_matrix))
    result1 = 0
    for i in range(0,iSize):
        result1 +=my_matrix[i][i]
    sum_list.append(result1)      
    result2 = 0
    for i in range(iSize-1,-1,-1):
        result2 +=my_matrix[i][i]
    sum_list.append(result2)
    if len(set(sum_list))>1:
        return False
    return True",241
Human: Write a Python function which follows this instruction:  Write a python function to check if a given number is one less than twice its reverse. Assistant: ,"def rev(num):    
    rev_num = 0
    while (num > 0):  
        rev_num = (rev_num * 10 + num % 10) 
        num = num // 10  
    return rev_num  
def check(n):    
    return (2 * rev(n) == n + 1)  ",179
"Human: Write a Python function which follows this instruction: You are given two positive integers n and m, and your task is to compute the average of the integers from n through m (including n and m). Round the answer to the nearest integer and convert that to binary. If n is greater than m, return -1. Assistant: ","
def rounded_avg(n, m):
    if m < n:
        return -1
    summation = 0
    for i in range(n, m+1):
        summation += i
    return bin(round(summation/(m - n + 1)))",103
Human: Write a Python function which follows this instruction:  remove_vowels is a function that takes string and returns string without vowels. Assistant: ,"
def remove_vowels(text):
    return """".join([s for s in text if s.lower() not in [""a"", ""e"", ""i"", ""o"", ""u""]])",51
Human: Write a Python function which follows this instruction:  You are given a list of integers. Write a function next_smallest() that returns the 2nd smallest element of the list. Return None if there is no such element. Assistant: ,"
def next_smallest(lst):
    lst = sorted(set(lst))
    return None if len(lst) < 2 else lst[1]",90
Human: Write a Python function which follows this instruction:  Write a python function to count the number of set bits (binary digits with value 1) in a given number. Assistant: ,"def count_Set_Bits(n): 
    count = 0
    while (n): 
        count += n & 1
        n >>= 1
    return count ",269
Human: Write a Python function which follows this instruction:  Write a function to find the item with maximum frequency in a given list. Assistant: ,"from collections import defaultdict
def max_occurrences(nums):
    dict = defaultdict(int)
    for i in nums:
        dict[i] += 1
    result = max(dict.items(), key=lambda x: x[1]) 
    return result[0]",242
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of the largest and smallest value in a given array. Assistant: ,"def big_sum(nums):
      sum= max(nums)+min(nums)
      return sum",424
Human: Write a Python function which follows this instruction:  Write a function to check if the given integer is a prime number. Assistant: ,"def prime_num(num):
  if num >=1:
   for i in range(2, num//2):
     if (num % i) == 0:
                return False
     else:
                return True
  else:
          return False",474
Human: Write a Python function which follows this instruction:  Write a python function to convert complex numbers to polar coordinates. Assistant: ,"import cmath  
def convert(numbers):    
  num = cmath.polar(numbers)  
  return (num) ",292
Human: Write a Python function which follows this instruction:  Write a function to find the perimeter of a regular pentagon from the length of its sides. Assistant: ,"import math
def perimeter_pentagon(a):
  perimeter=(5*a)
  return perimeter",265
Human: Write a Python function which follows this instruction: Return maximum element in the list. Assistant: ,"
def max_element(l: list):
    m = l[0]
    for e in l:
        if e > m:
            m = e
    return m",35
"Human: Write a Python function which follows this instruction: I think we all remember that feeling when the result of some long-awaited event is finally known. The feelings and thoughts you have at that moment are definitely worth noting down and comparing. Your task is to determine if a person correctly guessed the results of a number of matches. You are given two arrays of scores and guesses of equal length, where each index shows a match. Return an array of the same length denoting how far off each guess was. If they have guessed correctly, the value is 0, and if not, the value is the absolute difference between the guess and the score. Assistant: ","
def compare(game,guess):
    return [abs(x-y) for x,y in zip(game,guess)]",152
"Human: Write a Python function which follows this instruction:  Write a function count_nums which takes an array of integers and returns the number of elements which has a sum of digits > 0. If a number is negative, then its first signed digit will be negative: e.g. -123 has signed digits -1, 2, and 3. Assistant: ","
def count_nums(arr):
    def digits_sum(n):
        neg = 1
        if n < 0: n, neg = -1 * n, -1 
        n = [int(i) for i in str(n)]
        n[0] = n[0] * neg
        return sum(n)
    return len(list(filter(lambda x: x > 0, [digits_sum(i) for i in arr])))",108
Human: Write a Python function which follows this instruction:  Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees. Assistant: ,"import math
def sector_area(r,a):
    if a > 360:
        return None
    return (math.pi*r**2) * (a/360)",532
"Human: Write a Python function which follows this instruction:  triples_sum_to_zero takes a list of integers as an input. it returns True if there are three distinct elements in the list that sum to zero, and False otherwise. Assistant: ","
def triples_sum_to_zero(l: list):
    for i in range(len(l)):
        for j in range(i + 1, len(l)):
            for k in range(j + 1, len(l)):
                if l[i] + l[j] + l[k] == 0:
                    return True
    return False",40
Human: Write a Python function which follows this instruction:  Write a function that takes in an array and element and returns a tuple containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found). Assistant: ,"def sequential_search(dlist, item):
    pos = 0
    found = False
    while pos < len(dlist) and not found:
        if dlist[pos] == item:
            found = True
        else:
            pos = pos + 1
    return found, pos",316
"Human: Write a Python function which follows this instruction: Given a positive integer n, return the product of the odd digits. Return 0 if all digits are even. Assistant: ","
def digits(n):
    product = 1
    odd_count = 0
    for digit in str(n):
        int_digit = int(digit)
        if int_digit%2 == 1:
            product= product*int_digit
            odd_count+=1
    if odd_count ==0:
        return 0
    else:
        return product",131
"Human: Write a Python function which follows this instruction:  In this task, you will be given a string that represents a number of apples and oranges that are distributed in a basket of fruit this basket contains apples, oranges, and mango fruits. Given the string that represents the total number of the oranges and apples and an integer that represent the total number of the fruits in the basket return the number of the mango fruits in the basket. Assistant: ","
def fruit_distribution(s,n):
    lis = list()
    for i in s.split(' '):
        if i.isdigit():
            lis.append(int(i))
    return n - sum(lis)",67
Human: Write a Python function which follows this instruction: Return median of elements in the list l. Assistant: ,"
def median(l: list):
    l = sorted(l)
    if len(l) % 2 == 1:
        return l[len(l) // 2]
    else:
        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2.0",47
"Human: Write a Python function which follows this instruction: It is the last week of the semester and the teacher has to give the grades to students. The teacher has been making her own algorithm for grading. The only problem is, she has lost the code she used for grading. She has given you a list of GPAs for some students and you have to write a function that can output a list of letter grades using the following table: GPA       |    Letter grade 4.0                A+ > 3.7                A > 3.3                A- > 3.0                B+ > 2.7                B > 2.3                B- > 2.0                C+ > 1.7                C > 1.3                C- > 1.0                D+ > 0.7                D > 0.0                D- 0.0                E Assistant: ","
def numerical_letter_grade(grades):

   
    letter_grade = []
    for gpa in grades:
        if gpa == 4.0:
            letter_grade.append(""A+"")
        elif gpa > 3.7:
            letter_grade.append(""A"")
        elif gpa > 3.3:
            letter_grade.append(""A-"")
        elif gpa > 3.0:
            letter_grade.append(""B+"")
        elif gpa > 2.7:
            letter_grade.append(""B"")
        elif gpa > 2.3:
            letter_grade.append(""B-"")
        elif gpa > 2.0:
            letter_grade.append(""C+"")
        elif gpa > 1.7:
            letter_grade.append(""C"")
        elif gpa > 1.3:
            letter_grade.append(""C-"")
        elif gpa > 1.0:
            letter_grade.append(""D+"")
        elif gpa > 0.7:
            letter_grade.append(""D"")
        elif gpa > 0.0:
            letter_grade.append(""D-"")
        else:
            letter_grade.append(""E"")
    return letter_grade",81
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of even numbers at even positions of a list. Assistant: ,"def sum_even_and_even_index(arr):  
    i = 0
    sum = 0
    for i in range(0, len(arr),2): 
        if (arr[i] % 2 == 0) : 
            sum += arr[i]  
    return sum",307
Human: Write a Python function which follows this instruction:  Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26. Assistant: ,"def get_Char(strr):  
    summ = 0
    for i in range(len(strr)): 
        summ += (ord(strr[i]) - ord('a') + 1)  
    if (summ % 26 == 0): 
        return ord('z') 
    else: 
        summ = summ % 26
        return chr(ord('a') + summ - 1)",201
Human: Write a Python function which follows this instruction:  Write a python function to find the element of a list having maximum length. Assistant: ,"def Find_Max(lst): 
    maxList = max((x) for x in lst) 
    return maxList",371
Human: Write a Python function which follows this instruction:  Write a function to compute the sum of digits of each number of a given list. Assistant: ,"def sum_of_digits(nums):
    return sum(int(el) for n in nums for el in str(n) if el.isdigit())",354
Human: Write a Python function which follows this instruction:  Write a function which returns nth catalan number. Assistant: ,"def catalan_number(num):
    if num <=1:
         return 1   
    res_num = 0
    for i in range(num):
        res_num += catalan_number(i) * catalan_number(num-i-1)
    return res_num",453
Human: Write a Python function which follows this instruction:  Write a function to merge three dictionaries into a single dictionary. Assistant: ,"import collections as ct
def merge_dictionaries_three(dict1,dict2, dict3):
    merged_dict = dict(ct.ChainMap({},dict1,dict2,dict3))
    return merged_dict",205
Human: Write a Python function which follows this instruction:  Write a function to filter odd numbers. Assistant: ,"def filter_oddnumbers(nums):
 odd_nums = list(filter(lambda x: x%2 != 0, nums))
 return odd_nums",378
"Human: Write a Python function which follows this instruction:  You are given an array arr of integers and you need to return sum of magnitudes of integers multiplied by product of all signs of each number in the array, represented by 1, -1 or 0. Note: return None for empty arr. Assistant: ","
def prod_signs(arr):
    if not arr: return None
    prod = 0 if 0 in arr else (-1) ** len(list(filter(lambda x: x < 0, arr)))
    return prod * sum([abs(i) for i in arr])",128
"Human: Write a Python function which follows this instruction: Write a function that accepts a list of strings. The list contains different words. Return the word with maximum number of unique characters. If multiple strings have maximum number of unique characters, return the one which comes first in lexicographical order. Assistant: ","
def find_max(words):
    return sorted(words, key = lambda x: (-len(set(x)), x))[0]",158
Human: Write a Python function which follows this instruction:  Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. Assistant: ,"def power_base_sum(base, power):
    return sum([int(i) for i in str(pow(base, power))])",512
Human: Write a Python function which follows this instruction:  Write a function to find the volume of a cube given its side length. Assistant: ,"def volume_cube(l):
  volume = l * l * l
  return volume",277
"Human: Write a Python function which follows this instruction:  Given an array arr of integers, find the minimum number of elements that need to be changed to make the array palindromic. A palindromic array is an array that is read the same backwards and forwards. In one change, you can change one element to any other element. Assistant: ","
def smallest_change(arr):
    ans = 0
    for i in range(len(arr) // 2):
        if arr[i] != arr[len(arr) - i - 1]:
            ans += 1
    return ans",73
Human: Write a Python function which follows this instruction:  Write a function to sort a list of elements. Assistant: ,"def comb_sort(nums):
    shrink_fact = 1.3
    gaps = len(nums)
    swapped = True
    i = 0
    while gaps > 1 or swapped:
        gaps = int(float(gaps) / shrink_fact)
        swapped = False
        i = 0
        while gaps + i < len(nums):
            if nums[i] > nums[i+gaps]:
                nums[i], nums[i+gaps] = nums[i+gaps], nums[i]
                swapped = True
            i += 1
    return nums",193
"Human: Write a Python function which follows this instruction:  We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. Assistant: ","def extract_index_list(l1, l2, l3):
    result = []
    for m, n, o in zip(l1, l2, l3):
        if (m == n == o):
            result.append(m)
    return result",540
Human: Write a Python function which follows this instruction:  Write a function to calculate a dog's age in dog's years. Assistant: ,"def dog_age(h_age):
 if h_age < 0:
 	exit()
 elif h_age <= 2:
	 d_age = h_age * 10.5
 else:
	 d_age = 21 + (h_age - 2)*4
 return d_age",301
Human: Write a Python function which follows this instruction:  Write a python function to find the last digit of a given number. Assistant: ,"def last_Digit(n) :
    return (n % 10) ",387
Human: Write a Python function which follows this instruction:  Write a function to extract the nth element from a given list of tuples. Assistant: ,"def extract_nth_element(list1, n):
    result = [x[n] for x in list1]
    return result",367
Human: Write a Python function which follows this instruction:  Write a function to multiply two integers. Assistant: ,"def multiply_int(x, y):
    if y < 0:
        return -multiply_int(x, -y)
    elif y == 0:
        return 0
    elif y == 1:
        return x
    else:
        return x + multiply_int(x, y - 1)",239
"Human: Write a Python function which follows this instruction:  Given list of integers, return list in strange order. Strange sorting, is when you start with the minimum value, then maximum of the remaining integers, then minimum and so on. Assistant: ","
def strange_sort_list(lst):
    res, switch = [], True
    while lst:
        res.append(min(lst) if switch else max(lst))
        lst.remove(res[-1])
        switch = not switch
    return res",70
Human: Write a Python function which follows this instruction:  Write a function to check whether the product of numbers in a list is even or not. Assistant: ,"def is_product_even(arr): 
    for i in range(len(arr)): 
        if (arr[i] & 1) == 0: 
            return True
    return False",585
Human: Write a Python function which follows this instruction:  Write a function to extract the elementwise and tuples from the given two tuples. Assistant: ,"def and_tuples(test_tup1, test_tup2):
  res = tuple(ele1 & ele2 for ele1, ele2 in zip(test_tup1, test_tup2))
  return (res) ",381
"Human: Write a Python function which follows this instruction:  Given a positive integer, obtain its roman numeral equivalent as a string, and return it in lowercase. Restrictions: 1 <= num <= 1000 Assistant: ","
def int_to_mini_roman(number):
    num = [1, 4, 5, 9, 10, 40, 50, 90,  
           100, 400, 500, 900, 1000] 
    sym = [""I"", ""IV"", ""V"", ""IX"", ""X"", ""XL"",  
           ""L"", ""XC"", ""C"", ""CD"", ""D"", ""CM"", ""M""] 
    i = 12
    res = ''
    while number: 
        div = number // num[i] 
        number %= num[i] 
        while div: 
            res += sym[i] 
            div -= 1
        i -= 1
    return res.lower()",156
"Human: Write a Python function which follows this instruction:  ""Given an array representing a branch of a tree that has non-negative integer nodes your task is to pluck one of the nodes and return it. The plucked node should be the node with the smallest even value. If multiple nodes with the same smallest even value are found return the node that has smallest index.  The plucked node should be returned in a list, [ smalest_value, its index ], If there are no even values or the given array is empty, return [].  Constraints: * 1 <= nodes.length <= 10000 * 0 <= node.value Assistant: ","
def pluck(arr):
    if(len(arr) == 0): return []
    evens = list(filter(lambda x: x%2 == 0, arr))
    if(evens == []): return []
    return [min(evens), arr.index(min(evens))]",68
Human: Write a Python function which follows this instruction:  Write a function to find sum and average of first n natural numbers. Assistant: ,"def sum_average(number):
 total = 0
 for value in range(1, number + 1):
    total = total + value
 average = total / number
 return (total,average)",469
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of an array. Assistant: ,"def _sum(arr):  
    sum=0
    for i in arr: 
        sum = sum + i      
    return(sum)  ",579
Human: Write a Python function which follows this instruction:  Write a function to convert a string to a list of strings split on the space character. Assistant: ,"def string_to_list(string): 
    lst = list(string.split("" "")) 
    return lst",232
Human: Write a Python function which follows this instruction: Filter given list of any python values only for integers Assistant: ,"from typing import List, Any

def filter_integers(values: List[Any]) -> List[int]:
    return [x for x in values if isinstance(x, int)]",22
Human: Write a Python function which follows this instruction:  Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/ Assistant: ,"def find_min_diff(arr,n): 
    arr = sorted(arr) 
    diff = 10**20 
    for i in range(n-1): 
        if arr[i+1] - arr[i] < diff: 
            diff = arr[i+1] - arr[i]  
    return diff ",548
Human: Write a Python function which follows this instruction:  Write a function to interleave 3 lists of the same length into a single flat list. Assistant: ,"def interleave_lists(list1,list2,list3):
    result = [el for pair in zip(list1, list2, list3) for el in pair]
    return result",448
Human: Write a Python function which follows this instruction:  Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients. Assistant: ,"import math  
def even_binomial_Coeff_Sum( n): 
    return (1 << (n - 1)) ",311
Human: Write a Python function which follows this instruction: Return list of all prefixes from shortest to longest of the input string Assistant: ,"from typing import List

def all_prefixes(string: str) -> List[str]:
    result = []

    for i in range(len(string)):
        result.append(string[:i+1])
    return result",14
Human: Write a Python function which follows this instruction:  Write a function to check whether a list contains the given sublist or not. Assistant: ,"def is_sublist(l, s):
	sub_set = False
	if s == []:
		sub_set = True
	elif s == l:
		sub_set = True
	elif len(s) > len(l):
		sub_set = False
	else:
		for i in range(len(l)):
			if l[i] == s[0]:
				n = 1
				while (n < len(s)) and (l[i+n] == s[n]):
					n += 1				
				if n == len(s):
					sub_set = True
	return sub_set",191
Human: Write a Python function which follows this instruction: Return only positive numbers in the list. Assistant: ,"
def get_positive(l: list):
    return [e for e in l if e > 0]",30
Human: Write a Python function which follows this instruction:  Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string. Assistant: ,"def find_length(string): 
	n = len(string)
	current_sum = 0
	max_sum = 0
	for i in range(n): 
		current_sum += (1 if string[i] == '0' else -1) 
		if current_sum < 0: 
			current_sum = 0
		max_sum = max(current_sum, max_sum) 
	return max_sum if max_sum else 0",237
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of xor of all pairs of numbers in the given list. Assistant: ,"def pair_xor_Sum(arr,n) : 
    ans = 0 
    for i in range(0,n) :    
        for j in range(i + 1,n) :   
            ans = ans + (arr[i] ^ arr[j])          
    return ans ",499
Human: Write a Python function which follows this instruction:  Write a python function to check whether the two numbers differ at one bit position only or not. Assistant: ,"def is_Power_Of_Two (x): 
    return x and (not(x & (x - 1))) 
def differ_At_One_Bit_Pos(a,b): 
    return is_Power_Of_Two(a ^ b)",167
Human: Write a Python function which follows this instruction:  Write a python function to find nth bell number. Assistant: ,"def bell_Number(n): 
    bell = [[0 for i in range(n+1)] for j in range(n+1)] 
    bell[0][0] = 1
    for i in range(1, n+1):
        bell[i][0] = bell[i-1][i-1]
        for j in range(1, i+1): 
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1] 
    return bell[n][0] ",477
Human: Write a Python function which follows this instruction: Concatenate list of strings into a single string Assistant: ,"from typing import List

def concatenate(strings: List[str]) -> str:
    return ''.join(strings)",28
Human: Write a Python function which follows this instruction:  Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format. Assistant: ,"import re
def change_date_format(dt):
        return re.sub(r'(\d{4})-(\d{1,2})-(\d{1,2})', '\\3-\\2-\\1', dt)",379
Human: Write a Python function which follows this instruction:  Write a python function to find the volume of a triangular prism. Assistant: ,"def find_Volume(l,b,h) : 
    return ((l * b * h) / 2) ",173
Human: Write a Python function which follows this instruction:  Write a function to calculate the area of a regular polygon given the length and number of its sides. Assistant: ,"from math import tan, pi
def area_polygon(s, l):
  area = s * (l ** 2) / (4 * tan(pi / s))
  return area",258
Human: Write a Python function which follows this instruction:  Write a python function to split a list at the nth eelment and add the first part to the end. Assistant: ,"def split_Arr(l, n):
  return l[n:] + l[:n]",456
Human: Write a Python function which follows this instruction:  Write a function to move all the numbers to the end of the given string. Assistant: ,"def move_num(test_str):
  res = ''
  dig = ''
  for ele in test_str:
    if ele.isdigit():
      dig += ele
    else:
      res += ele
  res += dig
  return (res) ",486
Human: Write a Python function which follows this instruction:  Write a python function to find the minimum number of rotations (greater than 0) required to get the same string. Assistant: ,"def find_Rotations(str): 
    tmp = str + str
    n = len(str) 
    for i in range(1,n + 1): 
        substring = tmp[i: i+n] 
        if (str == substring): 
            return i 
    return n ",170
Human: Write a Python function which follows this instruction:  Write a python function to reverse an array upto a given position. Assistant: ,"def reverse_Array_Upto_K(input, k): 
  return (input[k-1::-1] + input[k:]) ",507
Human: Write a Python function which follows this instruction: Write a function that takes a string and returns True if the string length is a prime number or False otherwise Assistant: ,"
def prime_length(string):
    l = len(string)
    if l == 0 or l == 1:
        return False
    for i in range(2, l):
        if l % i == 0:
            return False
    return True",82
Human: Write a Python function which follows this instruction:  Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power. Assistant: ,"def even_Power_Sum(n): 
    sum = 0; 
    for i in range(1,n+1): 
        j = 2*i; 
        sum = sum + (j*j*j*j*j); 
    return sum; ",308
Human: Write a Python function which follows this instruction: Return the largest prime factor of n. Assume n > 1 and is not a prime. Assistant: ,"
def largest_prime_factor(n: int):
    def is_prime(k):
        if k < 2:
            return False
        for i in range(2, k - 1):
            if k % i == 0:
                return False
        return True
    largest = 1
    for j in range(2, n + 1):
        if n % j == 0 and is_prime(j):
            largest = max(largest, j)
    return largest",59
"Human: Write a Python function which follows this instruction: Implement the function f that takes n as a parameter, and returns a list of size n, such that the value of the element at index i is the factorial of i if i is even or the sum of numbers from 1 to i otherwise. i starts from 1. the factorial of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i). Assistant: ","
def f(n):
    ret = []
    for i in range(1,n+1):
        if i%2 == 0:
            x = 1
            for j in range(1,i+1): x *= j
            ret += [x]
        else:
            x = 0
            for j in range(1,i+1): x += j
            ret += [x]
    return ret",106
"Human: Write a Python function which follows this instruction:  Write a python function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second. Assistant: ","def merge(lst):  
    return [list(ele) for ele in list(zip(*lst))] ",480
Human: Write a Python function which follows this instruction:  Write a python function to move all zeroes to the end of the given list. Assistant: ,"def move_zero(num_list):
    a = [0 for i in range(num_list.count(0))]
    x = [i for i in num_list if i != 0]
    return x + a",498
Human: Write a Python function which follows this instruction:  Write a function to convert tuple string to integer tuple. Assistant: ,"def tuple_str_int(test_str):
  res = tuple(int(num) for num in test_str.replace('(', '').replace(')', '').replace('...', '').split(', '))
  return (res) ",568
Human: Write a Python function which follows this instruction: Complete the function that takes two integers and returns the product of their unit digits. Assume the input is always valid. Assistant: ,"
def multiply(a, b):
    return abs(a % 10) * abs(b % 10)",97
Human: Write a Python function which follows this instruction:  Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number. Assistant: ,"def count_Primes_nums(n):
    ctr = 0
    for num in range(n):
        if num <= 1:
            continue
        for i in range(2,num):
            if (num % i) == 0:
                break
        else:
            ctr += 1
    return ctr",295
Human: Write a Python function which follows this instruction:  Write a function to remove tuples from the given tuple. Assistant: ,"def remove_nested(test_tup):
  res = tuple()
  for count, ele in enumerate(test_tup):
    if not isinstance(ele, tuple):
      res = res + (ele, )
  return (res) ",573
"Human: Write a Python function which follows this instruction: For a given number n, find the largest number that divides n evenly, smaller than n Assistant: ","
def largest_divisor(n: int) -> int:
    for i in reversed(range(n)):
        if n % i == 0:
            return i",24
"Human: Write a Python function which follows this instruction:  Create a function that returns a tuple (a, b), where 'a' is the largest of negative integers, and 'b' is the smallest of positive integers in a list. If there is no negative or positive integers, return them as None. Assistant: ","
def largest_smallest_integers(lst):
    smallest = list(filter(lambda x: x < 0, lst))
    largest = list(filter(lambda x: x > 0, lst))
    return (max(smallest) if smallest else None, min(largest) if largest else None)",136
Human: Write a Python function which follows this instruction:  Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php Assistant: ,"import math 
def count_divisors(n) : 
    count = 0
    for i in range(1, (int)(math.sqrt(n)) + 2) : 
        if (n % i == 0) : 
            if( n // i == i) : 
                count = count + 1
            else : 
                count = count + 2
    return count % 2 == 0",564
Human: Write a Python function which follows this instruction:  Write a function that matches a string that has an a followed by one or more b's. Assistant: ,"import re
def text_match_one(text):
        patterns = 'ab+?'
        if re.search(patterns,  text):
                return True
        else:
                return False
",386
Human: Write a Python function which follows this instruction:  Write a function to find the median of two sorted lists of same size. Assistant: ,"def get_median(arr1, arr2, n):
  i = 0
  j = 0
  m1 = -1
  m2 = -1
  count = 0
  while count < n + 1:
    count += 1
    if i == n:
      m1 = m2
      m2 = arr2[0]
      break
    elif j == n:
      m1 = m2
      m2 = arr1[0]
      break
    if arr1[i] <= arr2[j]:
      m1 = m2
      m2 = arr1[i]
      i += 1
    else:
      m1 = m2
      m2 = arr2[j]
      j += 1
  return (m1 + m2)/2",488
Human: Write a Python function which follows this instruction:  Write a function to check if all values are same in a dictionary. Assistant: ,"def check_value(dict, n):
    result = all(x == n for x in dict.values()) 
    return result",415
"Human: Write a Python function which follows this instruction: Given a string s and a natural number n, you have been tasked to implement a function that returns a list of all words from string s that contain exactly n consonants, in order these words appear in the string s. If the string s is empty then the function should return an empty list. Note: you may assume the input string contains only letters and spaces. Assistant: ","def select_words(s, n):
    result = []
    for word in s.split():
        n_consonants = 0
        for i in range(0, len(word)):
            if word[i].lower() not in [""a"",""e"",""i"",""o"",""u""]:
                n_consonants += 1 
        if n_consonants == n:
            result.append(word)
    return result
",117
Human: Write a Python function which follows this instruction:  Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/python-exercises/re/python-re-exercise-3.php Assistant: ,"import re
def text_match_zero_one(text):
        patterns = 'ab+?'
        if re.search(patterns,  text):
                return True
        else:
                return False",542
Human: Write a Python function which follows this instruction: Return length of given string Assistant: ,"
def strlen(string: str) -> int:
    return len(string)",23
Human: Write a Python function which follows this instruction:  Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/ Assistant: ,"from itertools import combinations 
def find_combinations(test_list):
  res = [(b1 + a1, b2 + a2) for (a1, a2), (b1, b2) in combinations(test_list, 2)]
  return (res) ",563
Human: Write a Python function which follows this instruction: Change numerical base of input number x to base. return string representation after the conversion. base numbers are less than 10. Assistant: ,"
def change_base(x: int, base: int):
    ret = """"
    while x > 0:
        ret = str(x % base) + ret
        x //= base
    return ret",44
Human: Write a Python function which follows this instruction:  Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list. Assistant: ,"import heapq
def larg_nnum(list1,n):
 largest=heapq.nlargest(n,list1)
 return largest",275
"Human: Write a Python function which follows this instruction: Input to this function is a string represented multiple groups for nested parentheses separated by spaces. For each of the group, output the deepest level of nesting of parentheses. E.g. (()()) has maximum two levels of nesting while ((())) has three. Assistant: ","from typing import List

def parse_nested_parens(paren_string: str) -> List[int]:
    def parse_paren_group(s):
        depth = 0
        max_depth = 0
        for c in s:
            if c == '(':
                depth += 1
                max_depth = max(depth, max_depth)
            else:
                depth -= 1

        return max_depth

    return [parse_paren_group(x) for x in paren_string.split(' ') if x]",6
Human: Write a Python function which follows this instruction:  Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/ Assistant: ,"import math 
def is_polite(n): 
	n = n + 1
	return (int)(n+(math.log((n + math.log(n, 2)), 2))) ",550
Human: Write a Python function which follows this instruction:  Write a python function to find the next perfect square greater than a given number. Assistant: ,"import math  
def next_Perfect_Square(N): 
    nextN = math.floor(math.sqrt(N)) + 1
    return nextN * nextN ",284
"Human: Write a Python function which follows this instruction:  Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists. Assistant: ","def list_split(S, step):
    return [S[i::step] for i in range(step)]",302
Human: Write a Python function which follows this instruction:  Write a function that returns the perimeter of a square given its side length as input. Assistant: ,"def square_perimeter(a):
  perimeter=4*a
  return perimeter",175
Human: Write a Python function which follows this instruction: You are given 2 words. You need to return True if the second word or any of its rotations is a substring in the first word Assistant: ,"
def cycpattern_check(a , b):
    l = len(b)
    pat = b + b
    for i in range(len(a) - l + 1):
        for j in range(l + 1):
            if a[i:i+l] == pat[j:j+l]:
                return True
    return False",154
Human: Write a Python function which follows this instruction:  Write a python function to get the difference between two lists. Assistant: ,"def Diff(li1,li2):
    return list(set(li1)-set(li2)) + list(set(li2)-set(li1))
 ",553
"Human: Write a Python function which follows this instruction:  You are given a rectangular grid of wells. Each row represents a single well, and each 1 in a row represents a single unit of water. Each well has a corresponding bucket that can be used to extract water from it, and all buckets have the same capacity. Your task is to use the buckets to empty the wells. Output the number of times you need to lower the buckets.  Constraints: * all wells have the same length * 1 <= grid.length <= 10^2 * 1 <= grid[:,1].length <= 10^2 * grid[i][j] -> 0 | 1 * 1 <= capacity <= 10 Assistant: ","
def max_fill(grid, capacity):
    import math
    return sum([math.ceil(sum(arr)/capacity) for arr in grid])",115
Human: Write a Python function which follows this instruction:  Write a function to find the minimum product from the pairs of tuples within a given list. Assistant: ,"def min_product_tuple(list1):
    result_min = min([abs(x * y) for x, y in list1] )
    return result_min",363
Human: Write a Python function which follows this instruction:  Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list. Assistant: ,"def replace_list(list1,list2):
 list1[-1:] = list2
 replace_list=list1
 return replace_list
",282
"Human: Write a Python function which follows this instruction:  Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved. Assistant: ","def re_arrange_array(arr, n):
  j=0
  for i in range(0, n):
    if (arr[i] < 0):
      temp = arr[i]
      arr[i] = arr[j]
      arr[j] = temp
      j = j + 1
  return arr",273
Human: Write a Python function which follows this instruction: Create a function which returns the largest index of an element which is not greater than or equal to the element immediately preceding it. If no such element exists then return -1. The given array will not contain duplicate values. Assistant: ,"
def can_arrange(arr):
    ind=-1
    i=1
    while i<len(arr):
      if arr[i]<arr[i-1]:
        ind=i
      i+=1
    return ind",135
Human: Write a Python function which follows this instruction:  Write a function to check whether the entered number is greater than the elements of the given array. Assistant: ,"def check_greater(arr, number):
  arr.sort()
  return number > arr[-1]",385
Human: Write a Python function which follows this instruction:  Write a function to find the circumference of a circle. Assistant: ,"def circle_circumference(r):
  perimeter=2*3.1415*r
  return perimeter",249
Human: Write a Python function which follows this instruction:  Write a function to find the nth newman–shanks–williams prime number. Assistant: ,"def newman_prime(n): 
	if n == 0 or n == 1: 
		return 1
	return 2 * newman_prime(n - 1) + newman_prime(n - 2)",298
Human: Write a Python function which follows this instruction:  Write a function to extract only the rear index element of each string in the given tuple. Assistant: ,"def extract_rear(test_tuple):
  res = list(sub[len(sub) - 1] for sub in test_tuple)
  return (res) ",376
"Human: Write a Python function which follows this instruction: This function takes a list l and returns a list l' such that l' is identical to l in the odd indicies, while its values at the even indicies are equal to the values of the even indicies of l, but sorted. Assistant: ","
def sort_even(l: list):
    evens = l[::2]
    odds = l[1::2]
    evens.sort()
    ans = []
    for e, o in zip(evens, odds):
        ans.extend([e, o])
    if len(evens) > len(odds):
        ans.append(evens[-1])
    return ans",37
Human: Write a Python function which follows this instruction:  Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array. Assistant: ,"def max_product(arr):   
  n = len(arr)
  mpis = arr[:]
  for i in range(n): 
    current_prod = arr[i]
    j = i + 1
    while j < n:
      if arr[j-1] > arr[j]: 
        break
      current_prod *= arr[j]
      if current_prod > mpis[j]:
        mpis[j] = current_prod 
      j = j + 1
  return max(mpis)",417
Human: Write a Python function which follows this instruction:  Write a function to find the first adverb and their positions in a given sentence. Assistant: ,"import re
def find_adverb_position(text):
 for m in re.finditer(r""\w+ly"", text):
    return (m.start(), m.end(), m.group(0))",392
Human: Write a Python function which follows this instruction:  Write a function to convert degrees to radians. Assistant: ,"import math
def radian_degree(degree):
 radian = degree*(math.pi/180)
 return radian",475
Human: Write a Python function which follows this instruction:  Write a function that takes in a list and element and checks whether all items in the list are equal to the given element. Assistant: ,"def check_element(list,element):
  check_element=all(v== element for v in list)
  return check_element",320
Human: Write a Python function which follows this instruction:  Write a function to sort a given matrix in ascending order according to the sum of its rows. Assistant: ,"def sort_matrix(M):
    result = sorted(M, key=sum)
    return result",172
Human: Write a Python function which follows this instruction:  Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. Assistant: ,"def count_no_of_ways(n, k): 
	dp = [0] * (n + 1) 
	total = k 
	mod = 1000000007
	dp[1] = k 
	dp[2] = k * k	 
	for i in range(3,n+1): 
		dp[i] = ((k - 1) * (dp[i - 1] + dp[i - 2])) % mod 
	return dp[n]",325
"Human: Write a Python function which follows this instruction: From a list of integers, remove all elements that occur more than once. Keep order of elements left the same as in the input. Assistant: ","from typing import List

def remove_duplicates(numbers: List[int]) -> List[int]:
    import collections
    c = collections.Counter(numbers)
    return [n for n in numbers if c[n] <= 1]",26
"Human: Write a Python function which follows this instruction: You are given a string s. if s[i] is a letter, reverse its case from lower to upper or vise versa, otherwise keep it as it is. If the string contains no letters, reverse the string. The function should return the resulted string. Assistant: ","
def solve(s):
    flg = 0
    idx = 0
    new_str = list(s)
    for i in s:
        if i.isalpha():
            new_str[idx] = i.swapcase()
            flg = 1
        idx += 1
    s = """"
    for i in new_str:
        s += i
    if flg == 0:
        return s[len(s)::-1]
    return s",161
"Human: Write a Python function which follows this instruction:  Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0). Assistant: ","def sum_series(n):
  if n < 1:
    return 0
  else:
    return n + sum_series(n - 2)",257
Human: Write a Python function which follows this instruction:  Write a python function to find the product of the array multiplication modulo n. Assistant: ,"def find_remainder(arr, n): 
    mul = 1
    for i in range(len(arr)):  
        mul = (mul * (arr[i] % n)) % n 
    return mul % n ",419
"Human: Write a Python function which follows this instruction:  Given a string 'text', return its md5 hash equivalent string. If 'text' is an empty string, return None. Assistant: ","
def string_to_md5(text):
    import hashlib
    return hashlib.md5(text.encode('ascii')).hexdigest() if text else None",162
"Human: Write a Python function which follows this instruction:  You are given a string representing a sentence, the sentence contains some words separated by a space, and you have to return a string that contains the words from the original sentence, whose lengths are prime numbers, the order of the words in the new string should be the same as the original one.  Constraints: * 1 <= len(sentence) <= 100 * sentence contains only letters Assistant: ","
def words_in_sentence(sentence):
    new_lst = []
    for word in sentence.split():
        flg = 0
        if len(word) == 1:
            flg = 1
        for i in range(2, len(word)):
            if len(word)%i == 0:
                flg = 1
        if flg == 0 or len(word) == 2:
            new_lst.append(word)
    return "" "".join(new_lst)",143
Human: Write a Python function which follows this instruction:  Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match. Assistant: ,"import re
def occurance_substring(text,pattern):
 for match in re.finditer(pattern, text):
    s = match.start()
    e = match.end()
    return (text[s:e], s, e)",557
"Human: Write a Python function which follows this instruction:  Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path. Assistant: ","def maxAverageOfPath(cost):
  N = len(cost)
  dp = [[0 for i in range(N + 1)] for j in range(N + 1)]
  dp[0][0] = cost[0][0]
  for i in range(1, N):
    dp[i][0] = dp[i - 1][0] + cost[i][0]
  for j in range(1, N):
    dp[0][j] = dp[0][j - 1] + cost[0][j]
  for i in range(1, N):
    for j in range(1, N):
      dp[i][j] = max(dp[i - 1][j],
                     dp[i][j - 1]) + cost[i][j]
  return dp[N - 1][N - 1] / (2 * N - 1)",509
"Human: Write a Python function which follows this instruction: brackets is a string of ""<"" and "">"". return True if every opening bracket has a corresponding closing bracket. Assistant: ","
def correct_bracketing(brackets: str):
    depth = 0
    for b in brackets:
        if b == ""<"":
            depth += 1
        else:
            depth -= 1
        if depth < 0:
            return False
    return depth == 0",56
Human: Write a Python function which follows this instruction:  Write a function to find the nth nonagonal number. Assistant: ,"def is_nonagonal(n): 
	return int(n * (7 * n - 5) / 2) ",505
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of fourth power of first n odd natural numbers. Assistant: ,"def odd_num_sum(n) : 
    j = 0
    sm = 0
    for i in range(1,n + 1) : 
        j = (2*i-1) 
        sm = sm + (j*j*j*j)   
    return sm ",554
Human: Write a Python function which follows this instruction: Given an integer. return a tuple that has the number of even and odd digits respectively. Assistant: ,"
def even_odd_count(num):
    even_count = 0
    odd_count = 0
    for i in str(abs(num)):
        if int(i)%2==0:
            even_count +=1
        else:
            odd_count +=1
    return (even_count, odd_count)",155
"Human: Write a Python function which follows this instruction:  Given two positive integers a and b, return the even digits between a and b, in ascending order. Assistant: ","
def generate_integers(a, b):
    lower = max(2, min(a, b))
    upper = min(8, max(a, b))

    return [i for i in range(lower, upper+1) if i % 2 == 0]",163
"Human: Write a Python function which follows this instruction:  Write a function to get the frequency of all the elements in a list, returned as a dictionary. Assistant: ","import collections
def freq_count(list1):
  freq_count= collections.Counter(list1)
  return freq_count",206
Human: Write a Python function which follows this instruction:  Write a python function to check whether any value in a sequence exists in a sequence or not. Assistant: ,"def overlapping(list1,list2):  
    for i in range(len(list1)): 
        for j in range(len(list2)): 
            if(list1[i]==list2[j]): 
                return True
    return False",368
Human: Write a Python function which follows this instruction:  Write a function to remove consecutive duplicates of a given list. Assistant: ,"from itertools import groupby
def consecutive_duplicates(nums):
    return [key for key, group in groupby(nums)] ",516
Human: Write a Python function which follows this instruction:  Write a function to find the median of three numbers. Assistant: ,"def median_numbers(a,b,c):
 if a > b:
    if a < c:
        median = a
    elif b > c:
        median = b
    else:
        median = c
 else:
    if a > c:
        median = a
    elif b < c:
        median = b
    else:
        median = c
 return median",353
Human: Write a Python function which follows this instruction:  Write a function to check whether the given string starts and ends with the same character or not. Assistant: ,"import re  
regex = r'^[a-z]$|^([a-z]).*\1$'
def check_char(string): 
	if(re.search(regex, string)): 
		return ""Valid"" 
	else: 
		return ""Invalid"" ",352
"Human: Write a Python function which follows this instruction:  Write a python function to count the number of pairs whose sum is equal to ‘sum’. The funtion gets as input a list of numbers and the sum, Assistant: ","def get_pairs_count(arr, sum):
    count = 0  
    for i in range(len(arr)):
        for j in range(i + 1,len(arr)):
            if arr[i] + arr[j] == sum:
                count += 1
    return count",552
Human: Write a Python function which follows this instruction:  Write a function to multiply all the numbers in a list and divide with the length of the list. Assistant: ,"def multiply_num(numbers):  
    total = 1
    for x in numbers:
        total *= x  
    return total/len(numbers) ",216
Human: Write a Python function which follows this instruction:  Write a python function to find the number of divisors of a given integer. Assistant: ,"def divisor(n):
  for i in range(n):
    x = len([i for i in range(1,n+1) if not n % i])
  return x",214
Human: Write a Python function which follows this instruction:  Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/ Assistant: ,"def count_reverse_pairs(test_list):
  res = sum([1 for idx in range(0, len(test_list)) for idxn in range(idx, len( 
	test_list)) if test_list[idxn] == str(''.join(list(reversed(test_list[idx]))))]) 
  return res",543
"Human: Write a Python function which follows this instruction:  You are given a list of two strings, both strings consist of open parentheses '(' or close parentheses ')' only. Your job is to check if it is possible to concatenate the two strings in some order, that the resulting string will be good. A string S is considered to be good if and only if all parentheses in S are balanced. For example: the string '(())()' is good, while the string '())' is not. Return 'Yes' if there's a way to make a good string, and return 'No' otherwise. Assistant: ","
def match_parens(lst):
    def check(s):
        val = 0
        for i in s:
            if i == '(':
                val = val + 1
            else:
                val = val - 1
            if val < 0:
                return False
        return True if val == 0 else False

    S1 = lst[0] + lst[1]
    S2 = lst[1] + lst[0]
    return 'Yes' if check(S1) or check(S2) else 'No'",119
Human: Write a Python function which follows this instruction:  Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple. Assistant: ,"def rear_extract(test_list):
  res = [lis[-1] for lis in test_list]
  return (res) ",309
Human: Write a Python function which follows this instruction:  Write a function to remove odd characters in a string. Assistant: ,"def remove_odd(str1):
 str2 = ''
 for i in range(1, len(str1) + 1):
    if(i % 2 == 0):
        str2 = str2 + str1[i - 1]
 return str2",389
Human: Write a Python function which follows this instruction:  Write a function to return a list of all pairs of consecutive items in a given list. Assistant: ,"def pair_wise(l1):
    temp = []
    for i in range(len(l1) - 1):
        current_element, next_element = l1[i], l1[i + 1]
        x = (current_element, next_element)
        temp.append(x)
    return temp",551
"Human: Write a Python function which follows this instruction:  Given a non-empty array of integers arr and an integer k, return the sum of the elements with at most two digits from the first k elements of arr.  Constraints: 1. 1 <= len(arr) <= 100 2. 1 <= k <= len(arr) Assistant: ","
def add_elements(arr, k):
    return sum(elem for elem in arr[:k] if len(str(elem)) <= 2)",122
Human: Write a Python function which follows this instruction:  Write a function to remove uneven elements in the nested mixed tuple. Assistant: ,"def even_ele(test_tuple, even_fnc): 
	res = tuple() 
	for ele in test_tuple: 
		if isinstance(ele, tuple): 
			res += (even_ele(ele, even_fnc), ) 
		elif even_fnc(ele): 
			res += (ele, ) 
	return res 
def extract_even(test_tuple):
  res = even_ele(test_tuple, lambda x: x % 2 == 0)
  return (res) ",450
Human: Write a Python function which follows this instruction:  Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12. Assistant: ,"def check_monthnumber_number(monthnum3):
  return monthnum3==4 or monthnum3==6 or monthnum3==9 or monthnum3==11",547
"Human: Write a Python function which follows this instruction:  Create a function that takes integers, floats, or strings representing real numbers, and returns the larger variable in its given variable type. Return None if the values are equal. Note: If a real number is represented as a string, the floating point might be . or , Assistant: ","
def compare_one(a, b):
    temp_a, temp_b = a, b
    if isinstance(temp_a, str): temp_a = temp_a.replace(',','.')
    if isinstance(temp_b, str): temp_b = temp_b.replace(',','.')
    if float(temp_a) == float(temp_b): return None
    return a if float(temp_a) > float(temp_b) else b ",137
Human: Write a Python function which follows this instruction:  Write a python function to convert a given string to uppercase. Assistant: ,"def is_upper(string):
  return (string.upper())",490
"Human: Write a Python function which follows this instruction: You are given a list of numbers. You need to return the sum of squared numbers in the given list, round each element in the list to the upper int(Ceiling) first. Assistant: ","
def sum_squares(lst):
    import math
    squared = 0
    for i in lst:
        squared += math.ceil(i)**2
    return squared",133
"Human: Write a Python function which follows this instruction:  Create a function that takes a value (string) representing a number and returns the closest integer to it. If the number is equidistant from two integers, round it away from zero.  Note: Rounding away from zero means that if the given number is equidistant from two integers, the one you should return is the one that is the farthest from zero. For example closest_integer(""14.5"") should return 15 and closest_integer(""-14.5"") should return -15. Assistant: ","def closest_integer(value):
    from math import floor, ceil

    if value.count('.') == 1:
        # remove trailing zeros
        while (value[-1] == '0'):
            value = value[:-1]

    num = float(value)
    if value[-2:] == '.5':
        if num > 0:
            res = ceil(num)
        else:
            res = floor(num)
    elif len(value) > 0:
        res = int(round(num))
    else:
        res = 0

    return res
",99
"Human: Write a Python function which follows this instruction: Create a function which takes a string representing a file's name, and returns 'Yes' if the the file's name is valid, and returns 'No' otherwise. A file's name is considered to be valid if and only if all the following conditions are met: - There should not be more than three digits ('0'-'9') in the file's name. - The file's name contains exactly one dot '.' - The substring before the dot should not be empty, and it starts with a letter from the latin alphapet ('a'-'z' and 'A'-'Z'). - The substring after the dot should be one of these: ['txt', 'exe', 'dll'] Assistant: ","
def file_name_check(file_name):
    suf = ['txt', 'exe', 'dll']
    lst = file_name.split(sep='.')
    if len(lst) != 2:
        return 'No'
    if not lst[1] in suf:
        return 'No'
    if len(lst[0]) == 0:
        return 'No'
    if not lst[0][0].isalpha():
        return 'No'
    t = len([x for x in lst[0] if x.isdigit()])
    if t > 3:
        return 'No'
    return 'Yes'",141
"Human: Write a Python function which follows this instruction: Return true if a given number is prime, and false otherwise. Assistant: ","
def is_prime(n):
    if n < 2:
        return False
    for k in range(2, n - 1):
        if n % k == 0:
            return False
    return True",31
Human: Write a Python function which follows this instruction:  Write a python function to find the cube sum of first n even natural numbers. Assistant: ,"def cube_Sum(n): 
    sum = 0
    for i in range(1,n + 1): 
        sum += (2*i)*(2*i)*(2*i) 
    return sum",373
Human: Write a Python function which follows this instruction:  Write a function to subtract two lists element-wise. Assistant: ,"def sub_list(nums1,nums2):
  result = map(lambda x, y: x - y, nums1, nums2)
  return list(result)",318
"Human: Write a Python function which follows this instruction:  Given a positive integer n, return the count of the numbers of n-digit positive integers that start or end with 1. Assistant: ","
def starts_one_ends(n):
    if n == 1: return 1
    return 18 * (10 ** (n - 2))",83
Human: Write a Python function which follows this instruction:  Write a function to check whether the given string is starting with a vowel or not using regex. Assistant: ,"import re 
regex = '^[aeiouAEIOU][A-Za-z0-9_]*'
def check_str(string): 
	return re.search(regex, string)",523
Human: Write a Python function which follows this instruction:  Write a python function to find the average of cubes of first n natural numbers. Assistant: ,"def find_Average_Of_Cube(n):  
    sum = 0
    for i in range(1, n + 1): 
        sum += i * i * i  
    return round(sum / n, 6) ",375
Human: Write a Python function which follows this instruction:  Write a python function to find the highest power of 2 that is less than or equal to n. Assistant: ,"def highest_Power_of_2(n): 
    res = 0 
    for i in range(n, 0, -1): 
        if ((i & (i - 1)) == 0): 
            res = i 
            break 
    return res ",344
"Human: Write a Python function which follows this instruction: This function takes two positive numbers x and y and returns the biggest even integer number that is in the range [x, y] inclusive. If there's no such number, then the function should return -1. Assistant: ","
def choose_num(x, y):
    if x > y:
        return -1
    if y % 2 == 0:
        return y
    if x == y:
        return -1
    return y - 1",102
Human: Write a Python function which follows this instruction:  Write a function that takes in the radius and height of a cylinder and returns the the volume. Assistant: ,"def volume_cylinder(r,h):
  volume=3.1415*r*r*h
  return volume",312
Human: Write a Python function which follows this instruction:  prime_fib returns n-th number that is a Fibonacci number and it's also prime. Assistant: ,"
def prime_fib(n: int):
    import math

    def is_prime(p):
        if p < 2:
            return False
        for k in range(2, min(int(math.sqrt(p)) + 1, p - 1)):
            if p % k == 0:
                return False
        return True
    f = [0, 1]
    while True:
        f.append(f[-1] + f[-2])
        if is_prime(f[-1]):
            n -= 1
        if n == 0:
            return f[-1]",39
Human: Write a Python function which follows this instruction:  Write a function to replace characters in a string. Assistant: ,"def replace_char(str1,ch,newch):
 str2 = str1.replace(ch, newch)
 return str2",422
Human: Write a Python function which follows this instruction:  Write a function to find the closest smaller number than n. Assistant: ,"def closest_num(N):
  return (N - 1)",207
Human: Write a Python function which follows this instruction:  Write a function to create a list of N empty dictionaries. Assistant: ,"def empty_list(length):
 empty_list = [{} for _ in range(length)]
 return empty_list",441
"Human: Write a Python function which follows this instruction:  You are given a positive integer n. You have to create an integer array a of length n. For each i (1 ≤ i ≤ n), the value of a[i] = i * i - i + 1. Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, and a[i] + a[j] + a[k] is a multiple of 3. Assistant: ","
def get_max_triples(n):
    A = [i*i - i + 1 for i in range(1,n+1)]
    ans = []
    for i in range(n):
        for j in range(i+1,n):
            for k in range(j+1,n):
                if (A[i]+A[j]+A[k])%3 == 0:
                    ans += [(A[i],A[j],A[k])]
    return len(ans)",147
Human: Write a Python function which follows this instruction:  Write a function to find the union of the elements of two given tuples and output them in sorted order. Assistant: ,"def union_elements(test_tup1, test_tup2):
  res = tuple(set(test_tup1 + test_tup2))
  return (res) ",434
"Human: Write a Python function which follows this instruction:  Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple. Assistant: ","def split_two_parts(list1, L):
    return list1[:L], list1[L:]",300
Human: Write a Python function which follows this instruction:  Write a function to check if the given tuple has any none value or not. Assistant: ,"def check_none(test_tup):
  res = any(map(lambda ele: ele is None, test_tup))
  return res ",530
"Human: Write a Python function which follows this instruction:  Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing. Assistant: ","def max_sum(arr): 
	MSIBS = arr[:] 
	for i in range(len(arr)): 
		for j in range(0, i): 
			if arr[i] > arr[j] and MSIBS[i] < MSIBS[j] + arr[i]: 
				MSIBS[i] = MSIBS[j] + arr[i] 
	MSDBS = arr[:] 
	for i in range(1, len(arr) + 1): 
		for j in range(1, i): 
			if arr[-i] > arr[-j] and MSDBS[-i] < MSDBS[-j] + arr[-i]: 
				MSDBS[-i] = MSDBS[-j] + arr[-i] 
	max_sum = float(""-Inf"") 
	for i, j, k in zip(MSIBS, MSDBS, arr): 
		max_sum = max(max_sum, i + j - k) 
	return max_sum",285
"Human: Write a Python function which follows this instruction:  Write a function to extract values between quotation marks "" "" of the given string. Assistant: ","import re
def extract_quotation(text1):
  return (re.findall(r'""(.*?)""', text1))",513
Human: Write a Python function which follows this instruction:  Write a python function to count number of digits in a given string. Assistant: ,"def number_ctr(str):
      number_ctr= 0
      for i in range(len(str)):
          if str[i] >= '0' and str[i] <= '9': number_ctr += 1     
      return  number_ctr",549
Human: Write a Python function which follows this instruction:  Write a function to find the ration of positive numbers in an array of integers. Assistant: ,"from array import array
def positive_count(nums):
    n = len(nums)
    n1 = 0
    for x in nums:
        if x > 0:
            n1 += 1
        else:
          None
    return round(n1/n,2)",394
"Human: Write a Python function which follows this instruction:  Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index. Assistant: ","import re

def find_literals(text, pattern):
  match = re.search(pattern, text)
  s = match.start()
  e = match.end()
  return (match.re.pattern, s, e)",476
Human: Write a Python function which follows this instruction:  Write a function to find the depth of a dictionary. Assistant: ,"def dict_depth(d):
    if isinstance(d, dict):
        return 1 + (max(map(dict_depth, d.values())) if d else 0)
    return 0",334
Human: Write a Python function which follows this instruction:  Write a function to check whether the given amount has no profit and no loss Assistant: ,"def noprofit_noloss(actual_cost,sale_amount): 
  if(sale_amount == actual_cost):
    return True
  else:
    return False",501
Human: Write a Python function which follows this instruction:  Write a function to reverse each string in a given list of string values. Assistant: ,"def reverse_string_list(stringlist):
    result = [x[::-1] for x in stringlist]
    return result",407
Human: Write a Python function which follows this instruction:  Write a function to find the list of maximum length in a list of lists. Assistant: ,"def max_length(list1):
    max_length = max(len(x) for x in  list1 )  
    max_list = max((x) for x in   list1)
    return(max_length, max_list)",324
Human: Write a Python function which follows this instruction:  Write a function to perform the mathematical bitwise xor operation across the given tuples. Assistant: ,"def bitwise_xor(test_tup1, test_tup2):
  res = tuple(ele1 ^ ele2 for ele1, ele2 in zip(test_tup1, test_tup2))
  return (res) ",355
Human: Write a Python function which follows this instruction:  Write a function to caluclate the area of a tetrahedron. Assistant: ,"import math
def area_tetrahedron(side):
  area = math.sqrt(3)*(side*side)
  return area",528
Human: Write a Python function which follows this instruction:  Write a function to convert a snake case string to camel case string. Assistant: ,"def snake_to_camel(word):
        import re
        return ''.join(x.capitalize() or '_' for x in word.split('_'))",220
"Human: Write a Python function which follows this instruction:  Given a grid with N rows and N columns (N >= 2) and a positive integer k, each cell of the grid contains a value. Every integer in the range [1, N * N] inclusive appears exactly once on the cells of the grid.  You have to find the minimum path of length k in the grid. You can start from any cell, and in each step you can move to any of the neighbor cells, in other words, you can go to cells which share an edge with you current cell. Please note that a path of length k means visiting exactly k cells (not necessarily distinct). You CANNOT go off the grid. A path A (of length k) is considered less than a path B (of length k) if after making the ordered lists of the values on the cells that A and B go through (let's call them lst_A and lst_B), lst_A is lexicographically less than lst_B, in other words, there exist an integer index i (1 <= i <= k) such that lst_A[i] < lst_B[i] and for any j (1 <= j < i) we have lst_A[j] = lst_B[j]. It is guaranteed that the answer is unique. Return an ordered list of the values on the cells that the minimum path go through. Assistant: ","
def minPath(grid, k):
    n = len(grid)
    val = n * n + 1
    for i in range(n):
        for j in range(n):
            if grid[i][j] == 1:
                temp = []
                if i != 0:
                    temp.append(grid[i - 1][j])

                if j != 0:
                    temp.append(grid[i][j - 1])

                if i != n - 1:
                    temp.append(grid[i + 1][j])

                if j != n - 1:
                    temp.append(grid[i][j + 1])

                val = min(temp)

    ans = []
    for i in range(k):
        if i % 2 == 0:
            ans.append(1)
        else:
            ans.append(val)
    return ans",129
Human: Write a Python function which follows this instruction:  Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples. Assistant: ,"def division_elements(test_tup1, test_tup2):
  res = tuple(ele1 // ele2 for ele1, ele2 in zip(test_tup1, test_tup2))
  return (res) ",299
Human: Write a Python function which follows this instruction:  Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter. Assistant: ,"def sample_nam(sample_names):
  sample_names=list(filter(lambda el:el[0].isupper() and el[1:].islower(),sample_names))
  return len(''.join(sample_names))",503
Human: Write a Python function which follows this instruction:  Write a function to find the lateral surface area of a cylinder. Assistant: ,"def lateralsuface_cylinder(r,h):
  lateralsurface= 2*3.1415*r*h
  return lateralsurface",276
Human: Write a Python function which follows this instruction:  Write a function to check if all the elements in tuple have same data type or not. Assistant: ,"def check_type(test_tuple):
  res = True
  for ele in test_tuple:
    if not isinstance(ele, type(test_tuple[0])):
      res = False
      break
  return (res) ",267
"Human: Write a Python function which follows this instruction: Given a string, find out how many distinct characters (regardless of case) does it consist of Assistant: ","
def count_distinct_characters(string: str) -> int:
    return len(set(string.lower()))",16
"Human: Write a Python function which follows this instruction: Write a function that accepts a list of strings as a parameter, deletes the strings that have odd lengths from it, and returns the resulted list with a sorted order, The list is always a list of strings and never an array of numbers, and it may contain duplicates. The order of the list should be ascending by length of each word, and you should return the list sorted by that rule. If two words have the same length, sort the list alphabetically. The function should return a list of strings in sorted order. You may assume that all words will have the same length. Assistant: ","
def sorted_list_sum(lst):
    lst.sort()
    new_lst = []
    for i in lst:
        if len(i)%2 == 0:
            new_lst.append(i)
    return sorted(new_lst, key=len)",149
Human: Write a Python function which follows this instruction:  Write a python function to check whether the given list contains consecutive numbers or not. Assistant: ,"def check_Consecutive(l): 
    return sorted(l) == list(range(min(l),max(l)+1)) ",420
Human: Write a Python function which follows this instruction:  Write a function to find the surface area of a cube of a given size. Assistant: ,"def surfacearea_cube(l):
  surfacearea= 6*l*l
  return surfacearea",393
Human: Write a Python function which follows this instruction: Task Write a function that takes a string as input and returns the sum of the upper characters only' ASCII codes. Assistant: ,"
def digitSum(s):
    if s == """": return 0
    return sum(ord(char) if char.isupper() else 0 for char in s)",66
Human: Write a Python function which follows this instruction: Return a string containing space-delimited numbers starting from 0 upto n inclusive. Assistant: ,"
def string_sequence(n: int) -> str:
    return ' '.join([str(x) for x in range(n + 1)])",15
Human: Write a Python function which follows this instruction:  Write a function to remove characters from the first string which are present in the second string. Assistant: ,"NO_OF_CHARS = 256
def str_to_list(string): 
	temp = [] 
	for x in string: 
		temp.append(x) 
	return temp 
def lst_to_string(List): 
	return ''.join(List) 
def get_char_count_array(string): 
	count = [0] * NO_OF_CHARS 
	for i in string: 
		count[ord(i)] += 1
	return count 
def remove_dirty_chars(string, second_string): 
	count = get_char_count_array(second_string) 
	ip_ind = 0
	res_ind = 0
	temp = '' 
	str_list = str_to_list(string) 
	while ip_ind != len(str_list): 
		temp = str_list[ip_ind] 
		if count[ord(temp)] == 0: 
			str_list[res_ind] = str_list[ip_ind] 
			res_ind += 1
		ip_ind+=1
	return lst_to_string(str_list[0:res_ind]) ",176
Human: Write a Python function which follows this instruction:  Write a function to divide two lists element wise. Assistant: ,"def div_list(nums1,nums2):
  result = map(lambda x, y: x / y, nums1, nums2)
  return list(result)",485
Human: Write a Python function which follows this instruction:  Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times. Assistant: ,"def odd_Equivalent(s,n): 
    count=0
    for i in range(0,n): 
        if (s[i] == '1'): 
            count = count + 1
    return count ",226
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of even factors of a number. Assistant: ,"import math 
def sumofFactors(n) : 
    if (n % 2 != 0) : 
        return 0
    res = 1
    for i in range(2, (int)(math.sqrt(n)) + 1) :    
        count = 0
        curr_sum = 1
        curr_term = 1
        while (n % i == 0) : 
            count= count + 1
            n = n // i 
            if (i == 2 and count == 1) : 
                curr_sum = 0
            curr_term = curr_term * i 
            curr_sum = curr_sum + curr_term 
        res = res * curr_sum  
    if (n >= 2) : 
        res = res * (1 + n) 
    return res",404
Human: Write a Python function which follows this instruction:  Write a function to flatten a given nested list structure. Assistant: ,"def flatten_list(list1):
    result_list = []
    if not list1: return result_list
    stack = [list(list1)]
    while stack:
        c_num = stack.pop()
        next = c_num.pop()
        if c_num: stack.append(c_num)
        if isinstance(next, list):
            if next: stack.append(list(next))
        else: result_list.append(next)
    result_list.reverse()
    return result_list ",331
Human: Write a Python function which follows this instruction:  Write a function to find whether a given array of integers contains any duplicate element. Assistant: ,"def test_duplicate(arraynums):
    nums_set = set(arraynums)    
    return len(arraynums) != len(nums_set)     ",177
Human: Write a Python function which follows this instruction:  Write a function to find the index of the first occurrence of a given number in a sorted array. Assistant: ,"def find_first_occurrence(A, x):
    (left, right) = (0, len(A) - 1)
    result = -1
    while left <= right:
        mid = (left + right) // 2
        if x == A[mid]:
            result = mid
            right = mid - 1
        elif x < A[mid]:
            right = mid - 1
        else:
            left = mid + 1
    return result",519
Human: Write a Python function which follows this instruction:  Write a function to find the size in bytes of the given tuple. Assistant: ,"import sys 
def tuple_size(tuple_list):
  return (sys.getsizeof(tuple_list)) ",466
Human: Write a Python function which follows this instruction:  Write a function to find the product of first even and odd number of a given list. Assistant: ,"def mul_even_odd(list1):
    first_even = next((el for el in list1 if el%2==0),-1)
    first_odd = next((el for el in list1 if el%2!=0),-1)
    return (first_even*first_odd)",567
Human: Write a Python function which follows this instruction: Input to this function is a string containing multiple groups of nested parentheses. Your goal is to separate those group into separate strings and return the list of those. Separate groups are balanced (each open brace is properly closed) and not nested within each other Ignore any spaces in the input string. Assistant: ,"from typing import List

def separate_paren_groups(paren_string: str) -> List[str]:
    result = []
    current_string = []
    current_depth = 0

    for c in paren_string:
        if c == '(':
            current_depth += 1
            current_string.append(c)
        elif c == ')':
            current_depth -= 1
            current_string.append(c)

            if current_depth == 0:
                result.append(''.join(current_string))
                current_string.clear()

    return result",1
Human: Write a Python function which follows this instruction:  Write a python function to find whether the parity of a given number is odd. Assistant: ,"def find_Parity(x): 
    y = x ^ (x >> 1); 
    y = y ^ (y >> 2); 
    y = y ^ (y >> 4); 
    y = y ^ (y >> 8); 
    y = y ^ (y >> 16); 
    if (y & 1): 
        return True
    return False",360
Human: Write a Python function which follows this instruction:  Write a function to find the first adverb ending with ly and its positions in a given string. Assistant: ,"import re
def find_adverbs(text):
  for m in re.finditer(r""\w+ly"", text):
    return ('%d-%d: %s' % (m.start(), m.end(), m.group(0)))",454
Human: Write a Python function which follows this instruction:  Write a function to find the ratio of zeroes to non-zeroes in an array of integers. Assistant: ,"from array import array
def zero_count(nums):
    n = len(nums)
    n1 = 0
    for x in nums:
        if x == 0:
            n1 += 1
        else:
          None
    return n1/(n-n1)",247
Human: Write a Python function which follows this instruction:  Write a function to find the nth tetrahedral number. Assistant: ,"def tetrahedral_number(n): 
	return (n * (n + 1) * (n + 2)) / 6",199
Human: Write a Python function which follows this instruction:  Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/ Assistant: ,"import math 
def find_Index(n): 
    x = math.sqrt(2 * math.pow(10,(n - 1)))
    return round(x)",525
"Human: Write a Python function which follows this instruction:  Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination. Assistant: ","from itertools import combinations_with_replacement 
def combinations_colors(l, n):
    return list(combinations_with_replacement(l,n))
",294
"Human: Write a Python function which follows this instruction: Out of list of strings, return the longest one. Return the first one in case of multiple strings of the same length. Return None in case the input list is empty. Assistant: ","from typing import List, Optional

def longest(strings: List[str]) -> Optional[str]:
    if not strings:
        return None

    maxlen = max(len(x) for x in strings)
    for s in strings:
        if len(s) == maxlen:
            return s",12
"Human: Write a Python function which follows this instruction: Your task is to implement a function that will simplify the expression x * n. The function returns True if x * n evaluates to a whole number and False otherwise. Both x and n, are string representation of a fraction, and have the following format, <numerator>/<denominator> where both numerator and denominator are positive whole numbers.  You can assume that x, and n are valid fractions, and do not have zero as denominator. Assistant: ","
def simplify(x, n):
    a, b = x.split(""/"")
    c, d = n.split(""/"")
    numerator = int(a) * int(c)
    denom = int(b) * int(d)
    if (numerator/denom == int(numerator/denom)):
        return True
    return False",144
Human: Write a Python function which follows this instruction:  Write a python function to split a string into characters. Assistant: ,"def split(word): 
    return [char for char in word] ",438
Human: Write a Python function which follows this instruction:  Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases Assistant: ,"def min_k(test_list, K):
  res = sorted(test_list, key = lambda x: x[1])[:K]
  return (res) ",539
Human: Write a Python function which follows this instruction:  Write a function that counts the number of pairs of integers in a list that xor to an even number. Assistant: ,"def find_even_pair(A): 
  count = 0
  for i in range(0, len(A)): 
    for j in range(i+1, len(A)): 
        if ((A[i] ^ A[j]) % 2 == 0): 
          count += 1

  return count",261
Human: Write a Python function which follows this instruction:  Write a function to apply a given format string to all of the elements in a list. Assistant: ,"def add_string(list_, string):
 add_string=[string.format(i) for i in  list_]
 return add_string",346
Human: Write a Python function which follows this instruction:  Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times. Assistant: ,"def max_sub_array_sum_repeated(a, n, k): 
	max_so_far = -2147483648
	max_ending_here = 0
	for i in range(n*k): 
		max_ending_here = max_ending_here + a[i%n] 
		if (max_so_far < max_ending_here): 
			max_so_far = max_ending_here 
		if (max_ending_here < 0): 
			max_ending_here = 0
	return max_so_far",322
Human: Write a Python function which follows this instruction:  Write a function to remove all whitespaces from a string. Assistant: ,"import re
def remove_all_spaces(text):
 return (re.sub(r'\s+', '',text))",581
Human: Write a Python function which follows this instruction:  Write a function to remove the parenthesis and what is inbetween them from a string. Assistant: ,"import re
def remove_parenthesis(items):
 for item in items:
    return (re.sub(r"" ?\([^)]+\)"", """", item))",504
Human: Write a Python function which follows this instruction: A simple program which should return the value of x if n is a prime number and should return the value of y otherwise. Assistant: ,"
def x_or_y(n, x, y):
    if n == 1:
        return y
    for i in range(2, n):
        if n % i == 0:
            return y
            break
    else:
        return x",150
Human: Write a Python function which follows this instruction:  Write a python function to find the maximum of two numbers. Assistant: ,"def maximum(a,b):   
    if a >= b: 
        return a 
    else: 
        return b ",340
"Human: Write a Python function which follows this instruction:  Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n]. Assistant: ","def sum_list(lst1,lst2):
  res_list = [lst1[i] + lst2[i] for i in range(len(lst1))] 
  return res_list",515
Human: Write a Python function which follows this instruction: Given a list of positive integers x. return a sorted list of all elements that hasn't any even digit.  Note: Returned list should be sorted in increasing order. Assistant: ,"
def unique_digits(x):
    odd_digit_elements = []
    for i in x:
        if all (int(c) % 2 == 1 for c in str(i)):
            odd_digit_elements.append(i)
    return sorted(odd_digit_elements)",104
Human: Write a Python function which follows this instruction:  Write a function to check whether the given number is armstrong or not. Assistant: ,"def armstrong_number(number):
 sum = 0
 times = 0
 temp = number
 while temp > 0:
           times = times + 1
           temp = temp // 10
 temp = number
 while temp > 0:
           reminder = temp % 10
           sum = sum + (reminder ** times)
           temp //= 10
 if number == sum:
           return True
 else:
           return False",468
Human: Write a Python function which follows this instruction:  Write a function to convert more than one list to nested dictionary. Assistant: ,"def convert_list_dictionary(l1, l2, l3):
     result = [{x: {y: z}} for (x, y, z) in zip(l1, l2, l3)]
     return result",347
Human: Write a Python function which follows this instruction:  Write a python function to find a pair with highest product from a given array of integers. Assistant: ,"def max_Product(arr): 
    arr_len = len(arr) 
    if (arr_len < 2): 
        return (""No pairs exists"")           
    x = arr[0]; y = arr[1]      
    for i in range(0,arr_len): 
        for j in range(i + 1,arr_len): 
            if (arr[i] * arr[j] > x * y): 
                x = arr[i]; y = arr[j] 
    return x,y    ",369
Human: Write a Python function which follows this instruction: Write a function that returns true if the given number is the multiplication of 3 prime numbers and false otherwise. Knowing that (a) is less then 100. Assistant: ,"
def is_multiply_prime(a):
    def is_prime(n):
        for j in range(2,n):
            if n%j == 0:
                return False
        return True

    for i in range(2,101):
        if not is_prime(i): continue
        for j in range(2,101):
            if not is_prime(j): continue
            for k in range(2,101):
                if not is_prime(k): continue
                if i*j*k == a: return True
    return False",75
Human: Write a Python function which follows this instruction:  Write a function to get all lucid numbers smaller than or equal to a given integer. Assistant: ,"def get_ludic(n):
	ludics = []
	for i in range(1, n + 1):
		ludics.append(i)
	index = 1
	while(index != len(ludics)):
		first_ludic = ludics[index]
		remove_index = index + first_ludic
		while(remove_index < len(ludics)):
			ludics.remove(ludics[remove_index])
			remove_index = remove_index + first_ludic - 1
		index += 1
	return ludics",472
Human: Write a Python function which follows this instruction:  Write a function to remove uppercase substrings from a given string. Assistant: ,"import re
def remove_uppercase(str1):
  return re.sub('[A-Z]', '', str1)",410
Human: Write a Python function which follows this instruction:  Write a python function to find the element that appears only once in a sorted array. Assistant: ,"def search(arr):
    n = len(arr)
    XOR = 0
    for i in range(n) :
        XOR = XOR ^ arr[i]
    return (XOR)",233
Human: Write a Python function which follows this instruction:  Write a function to find the lateral surface area of a cube given its side length. Assistant: ,"def lateralsurface_cube(l):
  LSA = 4 * (l * l)
  return LSA",303
Human: Write a Python function which follows this instruction:  Write a function to find the lateral surface area of a cone given radius r and the height h. Assistant: ,"import math
def lateralsurface_cone(r,h):
  l = math.sqrt(r * r + h * h)
  LSA = math.pi * r  * l
  return LSA",517
Human: Write a Python function which follows this instruction:  Write a function to find minimum of three numbers. Assistant: ,"def min_of_three(a,b,c): 
      if (a <= b) and (a <= c): 
        smallest = a 
      elif (b <= a) and (b <= c): 
        smallest = b 
      else: 
        smallest = c 
      return smallest ",271
Human: Write a Python function which follows this instruction:  Write a function to join a list of multiple integers into a single integer. Assistant: ,"def multiple_to_single(L):
  x = int("""".join(map(str, L)))
  return x",391
Human: Write a Python function which follows this instruction:  Write a function to count number items that are identical in the same position of three given lists. Assistant: ,"def count_samepair(list1,list2,list3):
    result = sum(m == n == o for m, n, o in zip(list1,list2,list3))
    return result",252
Human: Write a Python function which follows this instruction:  Write a python function to find the length of the smallest list in a list of lists. Assistant: ,"def Find_Min_Length(lst):  
    minLength = min(len(x) for x in lst )
    return minLength ",213
Human: Write a Python function which follows this instruction:  Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit. Assistant: ,"def left_rotate(n,d):   
    INT_BITS = 32
    return (n << d)|(n >> (INT_BITS - d))  ",580
Human: Write a Python function which follows this instruction:  Write a function to find the nth octagonal number. Assistant: ,"def is_octagonal(n): 
	return 3 * n * n - 2 * n ",182
Human: Write a Python function which follows this instruction: You are given a string s. Your task is to check if the string is happy or not. A string is happy if its length is at least 3 and every 3 consecutive letters are distinct Assistant: ,"
def is_happy(s):
    if len(s) < 3:
      return False

    for i in range(len(s) - 2):
      
      if s[i] == s[i+1] or s[i+1] == s[i+2] or s[i] == s[i+2]:
        return False
    return True",80
Human: Write a Python function which follows this instruction:  Write a python function which takes a list of integers and only returns the odd ones. Assistant: ,"def Split(list): 
    od_li = [] 
    for i in list: 
        if (i % 2 != 0): 
            od_li.append(i)  
    return od_li",428
Human: Write a Python function which follows this instruction:  Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius. Assistant: ,"import math
def wind_chill(v,t):
 windchill = 13.12 + 0.6215*t -  11.37*math.pow(v, 0.16) + 0.3965*t*math.pow(v, 0.16)
 return int(round(windchill, 0))",502
Human: Write a Python function which follows this instruction:  Write a function to find the pairwise addition of the neighboring elements of the given tuple. Assistant: ,"def add_pairwise(test_tup):
  res = tuple(i + j for i, j in zip(test_tup, test_tup[1:]))
  return (res) ",418
"Human: Write a Python function which follows this instruction: Check if in given list of numbers, are any two numbers closer to each other than given threshold. Assistant: ","from typing import List

def has_close_elements(numbers: List[float], threshold: float) -> bool:
    for idx, elem in enumerate(numbers):
        for idx2, elem2 in enumerate(numbers):
            if idx != idx2:
                distance = abs(elem - elem2)
                if distance < threshold:
                    return True

    return False",0
Human: Write a Python function which follows this instruction:  Write a function to count those characters which have vowels as their neighbors in the given string. Assistant: ,"def count_vowels(test_str):
  res = 0
  vow_list = ['a', 'e', 'i', 'o', 'u']
  for idx in range(1, len(test_str) - 1):
    if test_str[idx] not in vow_list and (test_str[idx - 1] in vow_list or test_str[idx + 1] in vow_list):
      res += 1
  if test_str[0] not in vow_list and test_str[1] in vow_list:
    res += 1
  if test_str[-1] not in vow_list and test_str[-2] in vow_list:
    res += 1
  return (res) ",559
"Human: Write a Python function which follows this instruction: brackets is a string of ""("" and "")"". return True if every opening bracket has a corresponding closing bracket. Assistant: ","
def correct_bracketing(brackets: str):
    depth = 0
    for b in brackets:
        if b == ""("":
            depth += 1
        else:
            depth -= 1
        if depth < 0:
            return False
    return depth == 0",61
Human: Write a Python function which follows this instruction: Find how many times a given substring can be found in the original string. Count overlaping cases. Assistant: ,"
def how_many_times(string: str, substring: str) -> int:
    times = 0

    for i in range(len(string) - len(substring) + 1):
        if string[i:i+len(substring)] == substring:
            times += 1

    return times",18
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of non-repeated elements in a given list. Assistant: ,"def find_sum(arr): 
    arr.sort() 
    sum = arr[0] 
    for i in range(len(arr)-1): 
        if (arr[i] != arr[i+1]): 
            sum = sum + arr[i+1]   
    return sum",560
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/ Assistant: ,"def odd_length_sum(arr):
    Sum = 0
    l = len(arr)
    for i in range(l):
        Sum += ((((i + 1) *(l - i) + 1) // 2) * arr[i])
    return Sum",565
Human: Write a Python function which follows this instruction:   def vowels_count(s): Assistant: ,"
FIX = """"""
Add more test cases.
    vowels = ""aeiouAEIOU""
    n_vowels = sum(c in vowels for c in s)
    if s[-1] == 'y' or s[-1] == 'Y':
        n_vowels += 1
    return n_vowels",64
Human: Write a Python function which follows this instruction:  Write a function to count the number of occurence of the string 'std' in a given string. Assistant: ,"def count_occurance(s):
  count = 0
  for i in range(len(s) - 2):
    if (s[i] == 's' and s[i+1] == 't' and s[i+2] == 'd'):
      count = count + 1
  return count",266
Human: Write a Python function which follows this instruction: Create a function encrypt that takes a string as an argument and returns a string encrypted with the alphabet being rotated. The alphabet should be rotated in a manner such that the letters shift down by two multiplied to two places. Assistant: ,"
def encrypt(s):
    d = 'abcdefghijklmnopqrstuvwxyz'
    out = ''
    for c in s:
        if c in d:
            out += d[(d.index(c)+2*2) % 26]
        else:
            out += c
    return out",89
Human: Write a Python function which follows this instruction:  Write a python function to find the first odd number in a given list of numbers. Assistant: ,"def first_odd(nums):
  first_odd = next((el for el in nums if el%2!=0),-1)
  return first_odd",588
Human: Write a Python function which follows this instruction:  Write a python function to convert the given string to lower case. Assistant: ,"def is_lower(string):
  return (string.lower())",425
Human: Write a Python function which follows this instruction:  Write a python function to find the sum of all odd natural numbers within the range l and r. Assistant: ,"def sum_odd(n): 
    terms = (n + 1)//2
    sum1 = terms * terms 
    return sum1  
def sum_in_range(l,r): 
    return sum_odd(r) - sum_odd(l - 1)",578
Human: Write a Python function which follows this instruction:  Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order. Assistant: ,"def tuple_intersection(test_list1, test_list2):
  res = set([tuple(sorted(ele)) for ele in test_list1]) & set([tuple(sorted(ele)) for ele in test_list2])
  return (res)",421
"Human: Write a Python function which follows this instruction:  Write a function which sorts the given list of integers in ascending order according to the sum of their digits. Note: if there are several items with similar sum of their digits, order them based on their index in original list. Assistant: ","
def order_by_points(nums):
    def digits_sum(n):
        neg = 1
        if n < 0: n, neg = -1 * n, -1 
        n = [int(i) for i in str(n)]
        n[0] = n[0] * neg
        return sum(n)
    return sorted(nums, key=digits_sum)",145
Human: Write a Python function which follows this instruction:  Write a python function to check if the elements of a given list are unique or not. Assistant: ,"def all_unique(test_list):
    if len(test_list) > len(set(test_list)):
        return False
    return True",317
"Human: Write a Python function which follows this instruction:  Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros. Assistant: ","def decimal_to_binary(n): 
    return bin(n).replace(""0b"","""") ",217
Human: Write a Python function which follows this instruction:  Write a function to find the surface area of a cylinder. Assistant: ,"def surfacearea_cylinder(r,h):
  surfacearea=((2*3.1415*r*r) +(2*3.1415*r*h))
  return surfacearea",445
Human: Write a Python function which follows this instruction: Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13. Assistant: ,"
def fizz_buzz(n: int):
    ns = []
    for i in range(n):
        if i % 11 == 0 or i % 13 == 0:
            ns.append(i)
    s = ''.join(list(map(str, ns)))
    ans = 0
    for c in s:
        ans += (c == '7')
    return ans",36
Human: Write a Python function which follows this instruction:  Write a python function to find the minimum of two numbers. Assistant: ,"def minimum(a,b):   
    if a <= b: 
        return a 
    else: 
        return b ",358
Human: Write a Python function which follows this instruction:  Write a function to locate the right insertion point for a specified value in sorted order. Assistant: ,"import bisect
def right_insertion(a, x):
    return bisect.bisect_right(a, x)",569
Human: Write a Python function which follows this instruction:  Write a function to check if the given tuples contain the k or not. Assistant: ,"def check_K(test_tup, K):
  res = False
  for ele in test_tup:
    if ele == K:
      res = True
      break
  return res ",589
Human: Write a Python function which follows this instruction:  Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. Assistant: ,"def round_and_sum(list1):
  lenght=len(list1)
  round_and_sum=sum(list(map(round,list1))* lenght)
  return round_and_sum",372
"Human: Write a Python function which follows this instruction: Given a non-empty list of integers, return the sum of all of the odd elements that are in even positions. Assistant: ","
def solution(lst):
    return sum([x for idx, x in enumerate(lst) if idx%2==0 and x%2==1])",121
Human: Write a Python function which follows this instruction:  Write a function to count the number of occurrences of a number in a given list. Assistant: ,"def frequency(a,x): 
    count = 0  
    for i in a: 
      if i == x: 
        count += 1

    return count ",263
Human: Write a Python function which follows this instruction:  Write a function to find the n'th lucas number. Assistant: ,"def find_lucas(n): 
	if (n == 0): 
		return 2
	if (n == 1): 
		return 1
	return find_lucas(n - 1) + find_lucas(n - 2) ",345
"Human: Write a Python function which follows this instruction:  Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string. Assistant: ","def replace_blank(str1,char):
 str2 = str1.replace(' ', char)
 return str2",274
Human: Write a Python function which follows this instruction:  Write a python function to interchange the first and last element in a given list. Assistant: ,"def swap_List(newList): 
    size = len(newList) 
    temp = newList[0] 
    newList[0] = newList[size - 1] 
    newList[size - 1] = temp   
    return newList ",491
Human: Write a Python function which follows this instruction:  Write a function to calculate the sum of perrin numbers. Assistant: ,"def cal_sum(n): 
	a = 3
	b = 0
	c = 2
	if (n == 0): 
		return 3
	if (n == 1): 
		return 3
	if (n == 2): 
		return 5
	sum = 5
	while (n > 2): 
		d = a + b 
		sum = sum + d 
		a = b 
		b = c 
		c = d 
		n = n-1
	return sum",400
"Human: Write a Python function which follows this instruction:  Create a function that returns True if the last character of a given string is an alphabetical character and is not a part of a word, and False otherwise. Note: ""word"" is a group of characters separated by space. Assistant: ","
def check_if_last_char_is_a_letter(txt):
 
    check = txt.split(' ')[-1]
    return True if len(check) == 1 and (97 <= ord(check.lower()) <= 122) else False",134
Human: Write a Python function which follows this instruction:  Write a function to find the dissimilar elements in the given two tuples. Assistant: ,"def find_dissimilar(test_tup1, test_tup2):
  res = tuple(set(test_tup1) ^ set(test_tup2))
  return (res) ",449
"Human: Write a Python function which follows this instruction:  Write a function that takes a string and returns an ordered version of it. Ordered version of string, is a string where all words (separated by space) are replaced by a new word where all the characters arranged in ascending order based on ascii value. Note: You should keep the order of words and blank spaces in the sentence. Assistant: ","
def anti_shuffle(s):
    return ' '.join([''.join(sorted(list(i))) for i in s.split(' ')])",86
Human: Write a Python function which follows this instruction:  Write a function to find the number of elements that occurs before the tuple element in the given tuple. Assistant: ,"def count_first_elements(test_tup):
  for count, ele in enumerate(test_tup):
    if isinstance(ele, tuple):
      break
  return (count) ",314
Human: Write a Python function which follows this instruction:  Write a python function to find the largest negative number from the given list. Assistant: ,"def largest_neg(list1): 
    max = list1[0] 
    for x in list1: 
        if x < max : 
             max = x  
    return max",395
Human: Write a Python function which follows this instruction:  Write a function to sort each sublist of strings in a given list of lists. Assistant: ,"def sort_sublists(input_list):
    result = [sorted(x, key = lambda x:x[0]) for x in input_list] 
    return result
",222
"Human: Write a Python function which follows this instruction: From a supplied list of numbers (of length at least two) select and return two that are the closest to each other and return them in order (smaller number, larger number). Assistant: ","from typing import List, Tuple

def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    closest_pair = None
    distance = None

    for idx, elem in enumerate(numbers):
        for idx2, elem2 in enumerate(numbers):
            if idx != idx2:
                if distance is None:
                    distance = abs(elem - elem2)
                    closest_pair = tuple(sorted([elem, elem2]))
                else:
                    new_distance = abs(elem - elem2)
                    if new_distance < distance:
                        distance = new_distance
                        closest_pair = tuple(sorted([elem, elem2]))

    return closest_pair",20
Human: Write a Python function which follows this instruction:  Write a function to check whether the given number is undulating or not. Assistant: ,"def is_undulating(n): 
	n = str(n)
	if (len(n) <= 2): 
		return False
	for i in range(2, len(n)): 
		if (n[i - 2] != n[i]): 
			return False
	return True",210
Human: Write a Python function which follows this instruction:  Write a python function to check whether the given number can be represented as the difference of two squares or not. Assistant: ,"def dif_Square(n): 
    if (n % 4 != 2): 
        return True
    return False",194
Human: Write a Python function which follows this instruction:  Write a python function to count true booleans in the given list. Assistant: ,"def count(lst):   
    return sum(lst) ",223
Human: Write a Python function which follows this instruction:  Write a function to remove all the words with k length in the given string. Assistant: ,"def remove_length(test_str, K):
  temp = test_str.split()
  res = [ele for ele in temp if len(ele) != K]
  res = ' '.join(res)
  return (res) ",556
Human: Write a Python function which follows this instruction:  Write a function to convert a tuple to a string. Assistant: ,"def tup_string(tup1):
  str =  ''.join(tup1)
  return str",244
"Human: Write a Python function which follows this instruction:  Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. Assistant: ","def insert_element(list,element):
 list = [v for elt in list for v in (element, elt)]
 return list",291
Human: Write a Python function which follows this instruction:  Write a function that gives loss amount on a sale if the given amount has loss else return 0. Assistant: ,"def loss_amount(actual_cost,sale_amount): 
  if(sale_amount > actual_cost):
    amount = sale_amount - actual_cost
    return amount
  else:
    return 0",403
Human: Write a Python function which follows this instruction:  Write a function to remove all elements from a given list present in another list. Assistant: ,"def remove_elements(list1, list2):
    result = [x for x in list1 if x not in list2]
    return result",256
Human: Write a Python function which follows this instruction:  Write a function to find the n'th star number. Assistant: ,"def find_star_num(n): 
	return (6 * n * (n - 1) + 1) ",305
Human: Write a Python function which follows this instruction:  Write a function to check whether a specified list is sorted or not. Assistant: ,"def issort_list(list1):
    result = all(list1[i] <= list1[i+1] for i in range(len(list1)-1))
    return result",440
Human: Write a Python function which follows this instruction:  Write a python function to count the upper case characters in a given string. Assistant: ,"def upper_ctr(str):
    upper_ctr = 0
    for i in range(len(str)):
          if str[i] >= 'A' and str[i] <= 'Z': upper_ctr += 1
          return upper_ctr",412
Human: Write a Python function which follows this instruction:  Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers. Assistant: ,"def square_Sum(n):  
    return int(2*n*(n+1)*(2*n+1)/3)",323
Human: Write a Python function which follows this instruction:  Write a function to convert a list to a tuple. Assistant: ,"def list_tuple(listx):
  tuplex = tuple(listx)
  return tuplex",457
Human: Write a Python function which follows this instruction:  Write a function to find the nth decagonal number. Assistant: ,"def is_num_decagonal(n): 
	return 4 * n * n - 3 * n ",315
Human: Write a Python function which follows this instruction:  Write a python function to get the first element of each sublist. Assistant: ,"def Extract(lst): 
    return [item[0] for item in lst] ",411
Human: Write a Python function which follows this instruction:  Evaluates polynomial with coefficients xs at point x. return xs[0] + xs[1] * x + xs[1] * x^2 + .... xs[n] * x^n Assistant: ,"import math

def poly(xs: list, x: float):
    begin, end = -1., 1.
    while poly(xs, begin) * poly(xs, end) > 0:
        begin *= 2.0
        end *= 2.0
    while end - begin > 1e-10:
        center = (begin + end) / 2.0
        if poly(xs, center) * poly(xs, begin) > 0:
            begin = center
        else:
            end = center
    return begin",32
Human: Write a Python function which follows this instruction:  Write a python function to find the last position of an element in a sorted array. Assistant: ,"def last(arr,x):
    n = len(arr)
    low = 0
    high = n - 1
    res = -1  
    while (low <= high):
        mid = (low + high) // 2 
        if arr[mid] > x:
            high = mid - 1
        elif arr[mid] < x:
            low = mid + 1
        else:
            res = mid
            low = mid + 1
    return res",575
Human: Write a Python function which follows this instruction:  Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers. Assistant: ,"def difference(n) :  
    S = (n*(n + 1))//2;  
    res = S*(S-1);  
    return res;  ",429
"Human: Write a Python function which follows this instruction: Circular shift the digits of the integer x, shift the digits right by shift and return the result as a string. If shift > number of digits, return digits reversed. Assistant: ","
def circular_shift(x, shift):
    s = str(x)
    if shift > len(s):
        return s[::-1]
    else:
        return s[len(s) - shift:] + s[:len(s) - shift]",65
Human: Write a Python function which follows this instruction:  Write a function to count bidirectional tuple pairs. Assistant: ,"def count_bidirectional(test_list):
  res = 0
  for idx in range(0, len(test_list)):
    for iidx in range(idx + 1, len(test_list)):
      if test_list[iidx][0] == test_list[idx][1] and test_list[idx][1] == test_list[iidx][0]:
        res += 1
  return res",390
"Human: Write a Python function which follows this instruction:  Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists. Assistant: ","def find_solution(a, b, n):
	i = 0
	while i * a <= n:
		if (n - (i * a)) % b == 0: 
			return (i, (n - (i * a)) // b)
		i = i + 1
	return None",255
Human: Write a Python function which follows this instruction:  Write a function to calculate the value of 'a' to the power 'b'. Assistant: ,"def power(a,b):
	if b==0:
		return 1
	elif a==0:
		return 0
	elif b==1:
		return a
	else:
		return a*power(a,b-1)",211
Human: Write a Python function which follows this instruction:  Write a python function to find the length of the longest sublists. Assistant: ,"def Find_Max_Length(lst):  
    maxLength = max(len(x) for x in lst )
    return maxLength ",435
Human: Write a Python function which follows this instruction:  Write a function to drop empty items from a given dictionary. Assistant: ,"def drop_empty(dict1):
  dict1 = {key:value for (key, value) in dict1.items() if value is not None}
  return dict1",416
Human: Write a Python function which follows this instruction:  Write a python function to remove first and last occurrence of a given character from the string. Assistant: ,"def remove_Occ(s,ch): 
    for i in range(len(s)): 
        if (s[i] == ch): 
            s = s[0 : i] + s[i + 1:] 
            break
    for i in range(len(s) - 1,-1,-1):  
        if (s[i] == ch): 
            s = s[0 : i] + s[i + 1:] 
            break
    return s ",171
"Human: Write a Python function which follows this instruction:  Given a positive integer n, return a tuple that has the number of even and odd integer palindromes that fall within the range(1, n), inclusive.  Note: 1. 1 <= n <= 10^3 2. returned tuple has the number of even and odd integer palindromes respectively. Assistant: ","
def even_odd_palindrome(n):
    def is_palindrome(n):
        return str(n) == str(n)[::-1]

    even_palindrome_count = 0
    odd_palindrome_count = 0

    for i in range(1, n+1):
        if i%2 == 1 and is_palindrome(i):
                odd_palindrome_count += 1
        elif i%2 == 0 and is_palindrome(i):
            even_palindrome_count += 1
    return (even_palindrome_count, odd_palindrome_count)",107
Human: Write a Python function which follows this instruction:  The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values. Assistant: ,"from operator import eq
def count_same_pair(nums1, nums2):
    result = sum(map(eq, nums1, nums2))
    return result",511
Human: Write a Python function which follows this instruction:  Write a function to calculate the sum of the negative numbers of a given list of numbers. Assistant: ,"def sum_negativenum(nums):
  sum_negativenum = list(filter(lambda nums:nums<0,nums))
  return sum(sum_negativenum)",245
Human: Write a Python function which follows this instruction:  Write a function to sort the given list. Assistant: ,"import heapq as hq
def heap_sort(iterable):
    h = []
    for value in iterable:
        hq.heappush(h, value)
    return [hq.heappop(h) for i in range(len(h))]",500
"Human: Write a Python function which follows this instruction:  Given a string text, replace all spaces in it with underscores, and if a string has more than 2 consecutive spaces, then replace all consecutive spaces with - Assistant: ","
def fix_spaces(text):
    new_text = """"
    i = 0
    start, end = 0, 0
    while i < len(text):
        if text[i] == "" "":
            end += 1
        else:
            if end - start > 2:
                new_text += ""-""+text[i]
            elif end - start > 0:
                new_text += ""_""*(end - start)+text[i]
            else:
                new_text += text[i]
            start, end = i+1, i+1
        i+=1
    if end - start > 2:
        new_text += ""-""
    elif end - start > 0:
        new_text += ""_""
    return new_text",140
"Human: Write a Python function which follows this instruction:  Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences. Assistant: ","def unique_sublists(list1):
    result ={}
    for l in list1: 
        result.setdefault(tuple(l), list()).append(1) 
    for a, b in result.items(): 
        result[a] = sum(b)
    return result",562
Human: Write a Python function which follows this instruction:  Write a function to flatten a list and sum all of its elements. Assistant: ,"def recursive_list_sum(data_list):
	total = 0
	for element in data_list:
		if type(element) == type([]):
			total = total + recursive_list_sum(element)
		else:
			total = total + element
	return total",187
Human: Write a Python function which follows this instruction:  Write a function to find the number of ways to partition a set of Bell numbers. Assistant: ,"def bell_number(n):   
    bell = [[0 for i in range(n+1)] for j in range(n+1)] 
    bell[0][0] = 1
    for i in range(1, n+1): 
        bell[i][0] = bell[i-1][i-1]  
        for j in range(1, i+1): 
            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]   
    return bell[n][0] ",189
"Human: Write a Python function which follows this instruction:  Write a python function which takes a list and returns a list with the same elements, but the k'th element removed. Assistant: ","def remove_kth_element(list1, L):
    return  list1[:L-1] + list1[L:]",478
Human: Write a Python function which follows this instruction:  Write a function that takes in an integer n and calculates the harmonic sum of n-1. Assistant: ,"def harmonic_sum(n):
  if n < 2:
    return 1
  else:
    return 1 / n + (harmonic_sum(n - 1)) ",288
Human: Write a Python function which follows this instruction: Given length of a side and high return area for a triangle. Assistant: ,"
def triangle_area(a, h):
    return a * h / 2.0",45
Human: Write a Python function which follows this instruction:  Write a python function to find quotient of two numbers (rounded down to the nearest integer). Assistant: ,"def find(n,m):  
    q = n//m 
    return (q)",326
Human: Write a Python function which follows this instruction:  Write a function that takes two lists and returns true if they have at least one common element. Assistant: ,"def common_element(list1, list2):
     result = False
     for x in list1:
         for y in list2:
             if x == y:
                 result = True
                 return result",383
Human: Write a Python function which follows this instruction:  Write a function to sum all amicable numbers from 1 to a specified number. Assistant: ,"def amicable_numbers_sum(limit):
    if not isinstance(limit, int):
        return ""Input is not an integer!""
    if limit < 1:
        return ""Input must be bigger than 0!""
    amicables = set()
    for num in range(2, limit+1):
        if num in amicables:
            continue
        sum_fact = sum([fact for fact in range(1, num) if num % fact == 0])
        sum_fact2 = sum([fact for fact in range(1, sum_fact) if sum_fact % fact == 0])
        if num == sum_fact2 and num != sum_fact:
            amicables.add(num)
            amicables.add(sum_fact2)
    return sum(amicables)",235
Human: Write a Python function which follows this instruction:  Write a function to return the sum of all divisors of a number. Assistant: ,"def sum_div(number):
    divisors = [1]
    for i in range(2, number):
        if (number % i)==0:
            divisors.append(i)
    return sum(divisors)",329
Human: Write a Python function which follows this instruction:  Write a python function to find the sublist having minimum length. Assistant: ,"def Find_Min(lst): 
    return min(lst, key=len) ",408
Human: Write a Python function which follows this instruction:  Write a python function to count inversions in an array. Assistant: ,"def get_Inv_Count(arr): 
    inv_count = 0
    for i in range(len(arr)): 
        for j in range(i + 1, len(arr)): 
            if (arr[i] > arr[j]): 
                inv_count += 1
    return inv_count ",330
Human: Write a Python function which follows this instruction:  Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list. Assistant: ,"def unique_sublists(list1):
    result ={}
    for l in  list1: 
        result.setdefault(tuple(l), list()).append(1) 
    for a, b in result.items(): 
        result[a] = sum(b)
    return result",544
"Human: Write a Python function which follows this instruction:  Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value. Assistant: ","from operator import itemgetter 
def index_minimum(test_list):
  res = min(test_list, key = itemgetter(1))[0]
  return (res) ",212
"Human: Write a Python function which follows this instruction:  Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ... Assistant: ","def jacobsthal_num(n): 
	dp = [0] * (n + 1) 
	dp[0] = 0
	dp[1] = 1
	for i in range(2, n+1): 
		dp[i] = dp[i - 1] + 2 * dp[i - 2] 
	return dp[n]",538
Human: Write a Python function which follows this instruction:  Write a python function to check whether the length of the word is odd or not. Assistant: ,"def word_len(s): 
    s = s.split(' ')   
    for word in s:    
        if len(word)%2!=0: 
            return True  
        else:
          return False",198
Human: Write a Python function which follows this instruction: Filter an input list of strings only for ones that contain given substring Assistant: ,"from typing import List

def filter_by_substring(strings: List[str], substring: str) -> List[str]:
    return [x for x in strings if substring in x]",7
"Human: Write a Python function which follows this instruction:  Given a dictionary, return True if all keys are strings in lower case or all keys are strings in upper case, else return False. The function should return False is the given dictionary is empty. Assistant: ","
def check_dict_case(dict):
    if len(dict.keys()) == 0:
        return False
    else:
        state = ""start""
        for key in dict.keys():

            if isinstance(key, str) == False:
                state = ""mixed""
                break
            if state == ""start"":
                if key.isupper():
                    state = ""upper""
                elif key.islower():
                    state = ""lower""
                else:
                    break
            elif (state == ""upper"" and not key.isupper()) or (state == ""lower"" and not key.islower()):
                    state = ""mixed""
                    break
            else:
                break
        return state == ""upper"" or state == ""lower"" ",95
Human: Write a Python function which follows this instruction: The Brazilian factorial is defined as: brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1! where n > 0  The function will receive an integer as input and should return the special factorial of this integer. Assistant: ,"
def special_factorial(n):
    fact_i = 1
    special_fact = 1
    for i in range(1, n+1):
        fact_i *= i
        special_fact *= fact_i
    return special_fact",139
Human: Write a Python function which follows this instruction:  Write a function to find the area of a rectangle. Assistant: ,"def rectangle_area(l,b):
  area=l*b
  return area",409
Human: Write a Python function which follows this instruction:  Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list. Assistant: ,"from collections import Counter 
def check_occurences(test_list):
  res = dict(Counter(tuple(ele) for ele in map(sorted, test_list)))
  return  (res) ",279
Human: Write a Python function which follows this instruction:  Write a function to append the given list to the given tuples. Assistant: ,"def add_lists(test_list, test_tup):
  res = tuple(list(test_tup) + test_list)
  return (res) ",224
Human: Write a Python function which follows this instruction:  Write a function to check if given tuple contains no duplicates. Assistant: ,"def check_distinct(test_tup):
  res = True
  temp = set()
  for ele in test_tup:
    if ele in temp:
      res = False
      break
    temp.add(ele)
  return res ",350
Human: Write a Python function which follows this instruction:  Write a function to find the ascii value of a character. Assistant: ,"def ascii_value(k):
  ch=k
  return ord(ch)",306
Human: Write a Python function which follows this instruction:  Write a function to find the minimum value in a given heterogeneous list. Assistant: ,"def min_val(listval):
     min_val = min(i for i in listval if isinstance(i, int))
     return min_val",364
Human: Write a Python function which follows this instruction:  Write a function to determine if the sum of the divisors of two integers are the same. Assistant: ,"import math 
def div_sum(n): 
  total = 1
  i = 2

  while i * i <= n:
    if (n % i == 0):
      total = (total + i + math.floor(n / i))
    i += 1

  return total

def are_equivalent(num1, num2): 
    return div_sum(num1) == div_sum(num2); ",259
Human: Write a Python function which follows this instruction:  Write a function to find all words which are at least 4 characters long in a string. Assistant: ,"import re
def find_char_long(text):
  return (re.findall(r""\b\w{4,}\b"", text))",168
"Human: Write a Python function which follows this instruction: You have been tasked to write a function that receives a hexadecimal number as a string and counts the number of hexadecimal digits that are primes (prime number, or a prime, is a natural number greater than 1 that is not a product of two smaller natural numbers). Hexadecimal digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F. Prime numbers are 2, 3, 5, 7, 11, 13, 17,... So you have to determine a number of the following digits: 2, 3, 5, 7, B (=decimal 11), D (=decimal 13). Note: you may assume the input is always correct or empty string, and symbols A,B,C,D,E,F are always uppercase. Assistant: ","
def hex_key(num):
    primes = ('2', '3', '5', '7', 'B', 'D')
    total = 0
    for i in range(0, len(num)):
        if num[i] in primes:
            total += 1
    return total",78
Human: Write a Python function which follows this instruction:  Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n. Assistant: ,"def dict_filter(dict,n):
 result = {key:value for (key, value) in dict.items() if value >=n}
 return result",313
Human: Write a Python function which follows this instruction:  Write a python function to count the number of pairs whose xor value is odd. Assistant: ,"def find_Odd_Pair(A,N) : 
    oddPair = 0
    for i in range(0,N) :  
        for j in range(i+1,N) :  
            if ((A[i] ^ A[j]) % 2 != 0):  
                oddPair+=1  
    return oddPair  ",430
Human: Write a Python function which follows this instruction:  Write a function to get the angle of a complex number. Assistant: ,"import cmath
def angle_complex(a,b):
  cn=complex(a,b)
  angle=cmath.phase(a+b)
  return angle",236
Human: Write a Python function which follows this instruction:  Write a python function to find the smallest missing number from a sorted list of natural numbers. Assistant: ,"def find_First_Missing(array,start=0,end=None):
    if end is None:
      end = len(array) - 1   
    if (start > end): 
        return end + 1
    if (start != array[start]): 
        return start; 
    mid = int((start + end) / 2) 
    if (array[mid] == mid): 
        return find_First_Missing(array,mid+1,end) 
    return find_First_Missing(array,start,mid) ",493
Human: Write a Python function which follows this instruction:  Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius. Assistant: ,"def triangle_area(r) :  
    if r < 0 : 
        return None
    return r * r ",492
Human: Write a Python function which follows this instruction:  Write a function to find the maximum product subarray of the given array. Assistant: ,"def max_subarray_product(arr):
	n = len(arr)
	max_ending_here = 1
	min_ending_here = 1
	max_so_far = 0
	flag = 0
	for i in range(0, n):
		if arr[i] > 0:
			max_ending_here = max_ending_here * arr[i]
			min_ending_here = min (min_ending_here * arr[i], 1)
			flag = 1
		elif arr[i] == 0:
			max_ending_here = 1
			min_ending_here = 1
		else:
			temp = max_ending_here
			max_ending_here = max (min_ending_here * arr[i], 1)
			min_ending_here = temp * arr[i]
		if (max_so_far < max_ending_here):
			max_so_far = max_ending_here
	if flag == 0 and max_so_far == 0:
		return 0
	return max_so_far",414
"Human: Write a Python function which follows this instruction:  You are given a 2 dimensional data, as a nested lists, which is similar to matrix, however, unlike matrices, each row may contain a different number of columns. Given lst, and integer x, find integers x in the list, and return list of tuples, [(x1, y1), (x2, y2) ...] such that each tuple is a coordinate - (row, columns), starting with 0. Sort coordinates initially by rows in ascending order. Also, sort coordinates of the row by columns in descending order. Assistant: ","
def get_row(lst, x):
    coords = [(i, j) for i in range(len(lst)) for j in range(len(lst[i])) if lst[i][j] == x]
    return sorted(sorted(coords, key=lambda x: x[1], reverse=True), key=lambda x: x[0])",87
Human: Write a Python function which follows this instruction:  Write a function to check whether all dictionaries in a list are empty or not. Assistant: ,"def empty_dit(list1):
 empty_dit=all(not d for d in list1)
 return empty_dit",229
Human: Write a Python function which follows this instruction:  Write a python function to set the left most unset bit. Assistant: ,"def set_left_most_unset_bit(n): 
    if not (n & (n + 1)): 
        return n 
    pos, temp, count = 0, n, 0 
    while temp: 
        if not (temp & 1): 
            pos = count      
        count += 1; temp>>=1
    return (n | (1 << (pos))) ",342
Human: Write a Python function which follows this instruction:  Write a python function to remove odd numbers from a given list. Assistant: ,"def remove_odd(l):
    for i in l:
        if i % 2 != 0:
            l.remove(i)
    return l",366
Human: Write a Python function which follows this instruction:  Write a function to put spaces between words starting with capital letters in a given string. Assistant: ,"import re
def capital_words_spaces(str1):
  return re.sub(r""(\w)([A-Z])"", r""\1 \2"", str1)",534
"Human: Write a Python function which follows this instruction: Given list of numbers (of at least two elements), apply a linear transform to that list, such that the smallest number will become 0 and the largest will become 1 Assistant: ","from typing import List

def rescale_to_unit(numbers: List[float]) -> List[float]:
    min_number = min(numbers)
    max_number = max(numbers)
    return [(x - min_number) / (max_number - min_number) for x in numbers]",21
Human: Write a Python function which follows this instruction:  Write a function to find cubes of individual elements in a list. Assistant: ,"def cube_nums(nums):
 cube_nums = list(map(lambda x: x ** 3, nums))
 return cube_nums",399
"Human: Write a Python function which follows this instruction:  Given an array of non-negative integers, return a copy of the given array after sorting, you will sort the given array in ascending order if the sum( first index value, last index value) is odd, or sort it in descending order if the sum( first index value, last index value) is even.  Note: * don't change the given array. Assistant: ","
def sort_array(array):
    return [] if len(array) == 0 else sorted(array, reverse= (array[0]+array[-1]) % 2 == 0) ",88
Human: Write a Python function which follows this instruction:  Write a python function to reverse only the vowels of a given string (where y is not a vowel). Assistant: ,"def reverse_vowels(str1):
	vowels = """"
	for char in str1:
		if char in ""aeiouAEIOU"":
			vowels += char
	result_string = """"
	for char in str1:
		if char in ""aeiouAEIOU"":
			result_string += vowels[-1]
			vowels = vowels[:-1]
		else:
			result_string += char
	return result_string",243
Human: Write a Python function which follows this instruction: Filter an input list of strings only for ones that start with a given prefix. Assistant: ,"from typing import List

def filter_by_prefix(strings: List[str], prefix: str) -> List[str]:
    return [x for x in strings if x.startswith(prefix)]",29
Human: Write a Python function which follows this instruction:  Write a python function to count the number of substrings with the sum of digits equal to their length. Assistant: ,"from collections import defaultdict
def count_Substrings(s):
    n = len(s)
    count,sum = 0,0
    mp = defaultdict(lambda : 0)
    mp[0] += 1
    for i in range(n):
        sum += ord(s[i]) - ord('0')
        count += mp[sum - (i + 1)]
        mp[sum - (i + 1)] += 1
    return count",183
"Human: Write a Python function which follows this instruction:  Given an array of integers, sort the integers that are between 1 and 9 inclusive, reverse the resulting array, and then replace each digit by its corresponding name from ""One"", ""Two"", ""Three"", ""Four"", ""Five"", ""Six"", ""Seven"", ""Eight"", ""Nine"". Assistant: ","
def by_length(arr):
    dic = {
        1: ""One"",
        2: ""Two"",
        3: ""Three"",
        4: ""Four"",
        5: ""Five"",
        6: ""Six"",
        7: ""Seven"",
        8: ""Eight"",
        9: ""Nine"",
    }
    sorted_arr = sorted(arr, reverse=True)
    new_arr = []
    for var in sorted_arr:
        try:
            new_arr.append(dic[var])
        except:
            pass
    return new_arr",105
Human: Write a Python function which follows this instruction:  Write a function to count the total number of characters in a string. Assistant: ,"def count_charac(str1):
 total = 0
 for i in str1:
    total = total + 1
 return total",283
"Human: Write a Python function which follows this instruction:  You'll be given a string of words, and your task is to count the number of boredoms. A boredom is a sentence that starts with the word ""I"". Sentences are delimited by '.', '?' or '!'. Assistant: ","
def is_bored(S):
    import re
    sentences = re.split(r'[.?!]\s*', S)
    return sum(sentence[0:2] == 'I ' for sentence in sentences)",91
Human: Write a Python function which follows this instruction:  Write a function to convert a given string to a tuple of characters. Assistant: ,"def string_to_tuple(str1):
    result = tuple(x for x in str1 if not x.isspace()) 
    return result",341
Human: Write a Python function which follows this instruction:  You will be given a string of words separated by commas or spaces. Your task is to split the string into words and return an array of the words. Assistant: ,"
def words_string(s):
    if not s:
        return []

    s_list = []

    for letter in s:
        if letter == ',':
            s_list.append(' ')
        else:
            s_list.append(letter)

    s_list = """".join(s_list)
    return s_list.split()",101
Human: Write a Python function which follows this instruction:  Write a python function to check whether the given two integers have opposite sign or not. Assistant: ,"def opposite_Signs(x,y): 
    return ((x ^ y) < 0); ",181
Human: Write a Python function which follows this instruction:  Write a function to replace all spaces in the given string with '%20'. Assistant: ,"def replace_spaces(string):
  return string.replace("" "", ""%20"")",494
Human: Write a Python function which follows this instruction:  Write a function to find the median length of a trapezium. Assistant: ,"def median_trapezium(base1,base2,height):
 median = 0.5 * (base1+ base2)
 return median",384
Human: Write a Python function which follows this instruction: Return True is list elements are monotonically increasing or decreasing. Assistant: ,"
def monotonic(l: list):
    if l == sorted(l) or l == sorted(l, reverse=True):
        return True
    return False",57
Human: Write a Python function which follows this instruction:  Write a function that matches a word containing 'z'. Assistant: ,"import re
def text_match_wordz(text):
        patterns = '\w*z.\w*'
        if re.search(patterns,  text):
                return True
        else:
                return False",405
Human: Write a Python function which follows this instruction:  Write a function to find the length of the longest palindromic subsequence in the given string. Assistant: ,"def lps(str): 
	n = len(str) 
	L = [[0 for x in range(n)] for x in range(n)] 
	for i in range(n): 
		L[i][i] = 1
	for cl in range(2, n+1): 
		for i in range(n-cl+1): 
			j = i+cl-1
			if str[i] == str[j] and cl == 2: 
				L[i][j] = 2
			elif str[i] == str[j]: 
				L[i][j] = L[i+1][j-1] + 2
			else: 
				L[i][j] = max(L[i][j-1], L[i+1][j]); 
	return L[0][n-1]",287
Human: Write a Python function which follows this instruction:  Write a function to sort a dictionary by value. Assistant: ,"from collections import Counter
def sort_counter(dict1):
 x = Counter(dict1)
 sort_counter=x.most_common()
 return sort_counter",423
"Human: Write a Python function which follows this instruction:  Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). Assistant: ","def get_max_sum (n):
	res = list()
	res.append(0)
	res.append(1)
	i = 2
	while i<n + 1:
		res.append(max(i, (res[int(i / 2)] 
						+ res[int(i / 3)] +
							res[int(i / 4)]
						+ res[int(i / 5)])))
		i = i + 1
	return res[n]",348
Human: Write a Python function which follows this instruction:  Write a python function to remove duplicate numbers from a given number of lists. Assistant: ,"def two_unique_nums(nums):
  return [i for i in nums if nums.count(i)==1]",443
Human: Write a Python function which follows this instruction:  Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers. Assistant: ,"def square_Sum(n):  
    return int(n*(4*n*n-1)/3) ",304
Human: Write a Python function which follows this instruction:  Write a function to return two words from a list of words starting with letter 'p'. Assistant: ,"import re
def start_withp(words):
 for w in words:
        m = re.match(""(P\w+)\W(P\w+)"", w)
        if m:
            return m.groups()",336
Human: Write a Python function which follows this instruction:  Write a function to extract specified size of strings from a given list of string values. Assistant: ,"def extract_string(str, l):
    result = [e for e in str if len(e) == l] 
    return result",401
Human: Write a Python function which follows this instruction:  Write a function that takes an integer a and returns True if this ingeger is a cube of some integer number. Note: you may assume the input is always valid. Assistant: ,"
def iscube(a):
    a = abs(a)
    return int(round(a ** (1. / 3))) ** 3 == a",77
Human: Write a Python function which follows this instruction:  Write a function to find the shared elements from the given two lists. Assistant: ,"def similar_elements(test_tup1, test_tup2):
  res = tuple(set(test_tup1) & set(test_tup2))
  return (res) ",164
Human: Write a Python function which follows this instruction:  Write a python function to identify non-prime numbers. Assistant: ,"import math
def is_not_prime(n):
    result = False
    for i in range(2,int(math.sqrt(n)) + 1):
        if n % i == 0:
            result = True
    return result",165
Human: Write a Python function which follows this instruction:  Write a python function to return the negative numbers in a list. Assistant: ,"def neg_nos(list1):
  out = []
  for num in list1: 
    if num < 0: 
      out.append(num)
  return out ",388
Human: Write a Python function which follows this instruction:  Write a function to compute the n-th power of each number in a list. Assistant: ,"def nth_nums(nums,n):
 nth_nums = list(map(lambda x: x ** n, nums))
 return nth_nums",489
Human: Write a Python function which follows this instruction:  Write a function to reverse words seperated by spaces in a given string. Assistant: ,"def reverse_words(s):
        return ' '.join(reversed(s.split()))",473
Human: Write a Python function which follows this instruction:  Checks if given string is a palindrome Assistant: ,"
def is_palindrome(text: str):
    for i in range(len(text)):
        if text[i] != text[len(text) - 1 - i]:
            return False
    return True",48
"Human: Write a Python function which follows this instruction: Everyone knows Fibonacci sequence, it was studied deeply by mathematicians in the last couple centuries. However, what people don't know is Tribonacci sequence. Tribonacci sequence is defined by the recurrence: tri(1) = 3 tri(n) = 1 + n / 2, if n is even. tri(n) =  tri(n - 1) + tri(n - 2) + tri(n + 1), if n is odd. For example: tri(2) = 1 + (2 / 2) = 2 tri(4) = 3 tri(3) = tri(2) + tri(1) + tri(4) = 2 + 3 + 3 = 8 You are given a non-negative integer number n, you have to a return a list of the first n + 1 numbers of the Tribonacci sequence. Assistant: ","
def tri(n):
    if n == 0:
        return [1]
    my_tri = [1, 3]
    for i in range(2, n + 1):
        if i % 2 == 0:
            my_tri.append(i / 2 + 1)
        else:
            my_tri.append(my_tri[i - 1] + my_tri[i - 2] + (i + 3) / 2)
    return my_tri",130
Human: Write a Python function which follows this instruction:  Write a python function to calculate the product of the unique numbers in a given list. Assistant: ,"def unique_product(list_data):
    temp = list(set(list_data))
    p = 1
    for i in temp:
        p *= i
    return p",444
Human: Write a Python function which follows this instruction:  Write a python function to check whether all the characters are same or not. Assistant: ,"def all_Characters_Same(s) :
    n = len(s)
    for i in range(1,n) :
        if s[i] != s[0] :
            return False
    return True",527
Human: Write a Python function which follows this instruction:  Given the lengths of the three sides of a triangle. Return the area of the triangle rounded to 2 decimal points if the three sides form a valid triangle. Otherwise return -1 Three sides make a valid triangle when the sum of any two sides is greater than the third side. Assistant: ,"
def triangle_area(a, b, c):
    if a + b <= c or a + c <= b or b + c <= a:
        return -1 
    s = (a + b + c)/2    
    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
    area = round(area, 2)
    return area",71
Human: Write a Python function which follows this instruction:  returns encoded string by shifting every character by 5 in the alphabet. Assistant: ,"
def encode_shift(s: str):
    return """".join([chr(((ord(ch) - 5 - ord(""a"")) % 26) + ord(""a"")) for ch in s])",50
Human: Write a Python function which follows this instruction:  Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/ Assistant: ,"def lcs_of_three(X, Y, Z): 
  m = len(X)
  n = len(Y)
  o = len(Z)
  L = [[[0 for i in range(o+1)] for j in range(n+1)] for k in range(m+1)]
  for i in range(m+1): 
	  for j in range(n+1): 
		  for k in range(o+1): 
			  if (i == 0 or j == 0 or k == 0): 
				  L[i][j][k] = 0
			  elif (X[i-1] == Y[j-1] and X[i-1] == Z[k-1]): 
				  L[i][j][k] = L[i-1][j-1][k-1] + 1
			  else: 
				  L[i][j][k] = max(max(L[i-1][j][k], L[i][j-1][k]), L[i][j][k-1]) 
  return L[m][n][o]",533
Human: Write a Python function which follows this instruction:  Write a function to check whether an element exists within a tuple. Assistant: ,"def check_tuplex(tuplex,tuple1): 
  if tuple1 in tuplex:
    return True
  else:
     return False",359
"Human: Write a Python function which follows this instruction:  In this Kata, you have to sort an array of non-negative integers according to number of ones in their binary representation in ascending order. For similar number of ones, sort based on decimal value. Assistant: ","
def sort_array(arr):
    return sorted(sorted(arr), key=lambda x: bin(x)[2:].count('1'))",116
Human: Write a Python function which follows this instruction:  Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index. Assistant: ,"def substract_elements(test_tup1, test_tup2):
  res = tuple(map(lambda i, j: i - j, test_tup1, test_tup2))
  return (res) ",310
"Human: Write a Python function which follows this instruction:  Create a function that takes 3 numbers. Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers. Returns false in any other cases. Assistant: ","
def any_int(x, y, z):
    
    if isinstance(x,int) and isinstance(y,int) and isinstance(z,int):
        if (x+y==z) or (x+z==y) or (y+z==x):
            return True
        return False
    return False",92
Human: Write a Python function which follows this instruction:  Write a python function to check whether all the bits are unset in the given range or not. Assistant: ,"def all_Bits_Set_In_The_Given_Range(n,l,r):  
    num = (((1 << r) - 1) ^ ((1 << (l - 1)) - 1)) 
    new_num = n & num
    if (new_num == 0): 
        return True
    return False",272
"Human: Write a Python function which follows this instruction:  Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.) Assistant: ","def is_majority(arr, n, x):
	i = binary_search(arr, 0, n-1, x)
	if i == -1:
		return False
	if ((i + n//2) <= (n -1)) and arr[i + n//2] == x:
		return True
	else:
		return False
def binary_search(arr, low, high, x):
	if high >= low:
		mid = (low + high)//2 
		if (mid == 0 or x > arr[mid-1]) and (arr[mid] == x):
			return mid
		elif x > arr[mid]:
			return binary_search(arr, (mid + 1), high, x)
		else:
			return binary_search(arr, low, (mid -1), x)
	return -1",268
"Human: Write a Python function which follows this instruction: You will be given a number in decimal form and your task is to convert it to binary format. The function should return a string, with each character representing a binary number. Each character in the string will be '0' or '1'.  There will be an extra couple of characters 'db' at the beginning and at the end of the string. The extra characters are there to help with the format. Assistant: ","
def decimal_to_binary(decimal):
    return ""db"" + bin(decimal)[2:] + ""db""",79
Human: Write a Python function which follows this instruction:  Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). Assistant: ,"def count_char_position(str1): 
    count_chars = 0
    for i in range(len(str1)):
        if ((i == ord(str1[i]) - ord('A')) or 
            (i == ord(str1[i]) - ord('a'))): 
            count_chars += 1
    return count_chars ",260
"Human: Write a Python function which follows this instruction:  Write a function to find the specified number of largest products from two given lists, selecting one factor from each list. Assistant: ","def large_product(nums1, nums2, N):
    result = sorted([x*y for x in nums1 for y in nums2], reverse=True)[:N]
    return result",339
Human: Write a Python function which follows this instruction:  Write a function to find kth element from the given two sorted arrays. Assistant: ,"def find_kth(arr1, arr2, k):
	m = len(arr1)
	n = len(arr2)
	sorted1 = [0] * (m + n)
	i = 0
	j = 0
	d = 0
	while (i < m and j < n):
		if (arr1[i] < arr2[j]):
			sorted1[d] = arr1[i]
			i += 1
		else:
			sorted1[d] = arr2[j]
			j += 1
		d += 1
	while (i < m):
		sorted1[d] = arr1[i]
		d += 1
		i += 1
	while (j < n):
		sorted1[d] = arr2[j]
		d += 1
		j += 1
	return sorted1[k - 1]",467
Human: Write a Python function which follows this instruction: Return list with elements incremented by 1. Assistant: ,"
def incr_list(l: list):
    return [(e + 1) for e in l]",42
Human: Write a Python function which follows this instruction:  Write a function to find the volume of a sphere. Assistant: ,"import math
def volume_sphere(r):
  volume=(4/3)*math.pi*r*r*r
  return volume",200
Human: Write a Python function which follows this instruction:  Write a function that checks whether a string contains the 'a' character followed by two or three 'b' characters. Assistant: ,"import re
def text_match_two_three(text):
        patterns = 'ab{2,3}'
        if re.search(patterns,  text):
                return True
        else:
                return False",321
Human: Write a Python function which follows this instruction:  Write a python function to check whether every odd index contains odd numbers of a given list. Assistant: ,"def odd_position(nums):
	return all(nums[i]%2==i%2 for i in range(len(nums)))",558
Human: Write a Python function which follows this instruction:  Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/ Assistant: ,"def set_middle_bits(n):  
    n |= n >> 1; 
    n |= n >> 2; 
    n |= n >> 4; 
    n |= n >> 8; 
    n |= n >> 16;  
    return (n >> 1) ^ 1
def toggle_middle_bits(n): 
    if (n == 1): 
        return 1
    return n ^ set_middle_bits(n) ",521
"Human: Write a Python function which follows this instruction:  Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m. Assistant: ","def get_total_number_of_sequences(m,n): 
	T=[[0 for i in range(n+1)] for i in range(m+1)] 
	for i in range(m+1): 
		for j in range(n+1): 
			if i==0 or j==0: 
				T[i][j]=0
			elif i<j: 
				T[i][j]=0
			elif j==1: 
				T[i][j]=i 
			else: 
				T[i][j]=T[i-1][j]+T[i//2][j-1] 
	return T[m][n]",281
"Human: Write a Python function which follows this instruction:  Write a function that returns True if the object q will fly, and False otherwise. The object q will fly if it's balanced (it is a palindromic list) and the sum of its elements is less than or equal the maximum possible weight w. Assistant: ","
def will_it_fly(q,w):
    if sum(q) > w:
        return False

    i, j = 0, len(q)-1
    while i<j:
        if q[i] != q[j]:
            return False
        i+=1
        j-=1
    return True",72
"Human: Write a Python function which follows this instruction: You're given a list of deposit and withdrawal operations on a bank account that starts with zero balance. Your task is to detect if at any point the balance of account fallls below zero, and at that point function should return True. Otherwise it should return False. Assistant: ","from typing import List

def below_zero(operations: List[int]) -> bool:
    balance = 0

    for op in operations:
        balance += op
        if balance < 0:
            return True

    return False",3
Human: Write a Python function which follows this instruction:  Write a python function to set all even bits of a given number. Assistant: ,"def even_bit_set_number(n): 
    count = 0;res = 0;temp = n 
    while(temp > 0): 
        if (count % 2 == 1): 
            res |= (1 << count)
        count+=1
        temp >>= 1
    return (n | res) ",278
Human: Write a Python function which follows this instruction:  Write a function to check if a string is present as a substring in a given list of string values. Assistant: ,"def find_substring(str1, sub_str):
   if any(sub_str in s for s in str1):
       return True
   return False",209
Human: Write a Python function which follows this instruction:  Write a python function that returns the number of integer elements in a given list. Assistant: ,"def count_integer(list1):
    ctr = 0
    for i in list1:
        if isinstance(i, int):
            ctr = ctr + 1
    return ctr",293
"Human: Write a Python function which follows this instruction:  Write a function that checks if a strings contains 'z', except at the start and end of the word. Assistant: ","import re
def text_match_wordz_middle(text):
        return bool(re.search(r'\Bz\B',  text))",506
Human: Write a Python function which follows this instruction: Implement a function that takes an non-negative integer and returns an array of the first n integers that are prime numbers and less than n. Assistant: ,"def count_up_to(n):
    primes = []
    for i in range(2, n):
        is_prime = True
        for j in range(2, i):
            if i % j == 0:
                is_prime = False
                break
        if is_prime:
            primes.append(i)
    return primes
",96
Human: Write a Python function which follows this instruction:  Write a function to find the volume of a cone. Assistant: ,"import math
def volume_cone(r,h):
  volume = (1.0/3) * math.pi * r * r * h
  return volume",343
Human: Write a Python function which follows this instruction:  Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/ Assistant: ,"def count_rotation(arr):   
    for i in range (1,len(arr)): 
        if (arr[i] < arr[i - 1]): 
            return i  
    return 0",583
Human: Write a Python function which follows this instruction:  Write a python function to check whether every even index contains even numbers of a given list. Assistant: ,"def even_position(nums):
	return all(nums[i]%2==i%2 for i in range(len(nums)))",572
Human: Write a Python function which follows this instruction:  Write a function to check if a dictionary is empty Assistant: ,"def my_dict(dict1):
  if bool(dict1):
     return False
  else:
     return True",452
"Human: Write a Python function which follows this instruction: You have to write a function which validates a given date string and returns True if the date is valid otherwise False. The date is valid if all of the following rules are satisfied: 1. The date string is not empty. 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2. 3. The months should not be less than 1 or higher than 12. 4. The date should be in the format: mm-dd-yyyy Assistant: ","
def valid_date(date):
    try:
        date = date.strip()
        month, day, year = date.split('-')
        month, day, year = int(month), int(day), int(year)
        if month < 1 or month > 12:
            return False
        if month in [1,3,5,7,8,10,12] and day < 1 or day > 31:
            return False
        if month in [4,6,9,11] and day < 1 or day > 30:
            return False
        if month == 2 and day < 1 or day > 29:
            return False
    except:
        return False

    return True",124
Human: Write a Python function which follows this instruction:  Write a python function to count the number of equal numbers from three given integers. Assistant: ,"def test_three_equal(x,y,z):
  result = set([x,y,z])
  if len(result)==3:
    return 0
  else:
    return 4-len(result)",582
Human: Write a Python function which follows this instruction:  Write a python function to find the largest number that can be formed with the given list of digits. Assistant: ,"def find_Max_Num(arr) : 
    n = len(arr)
    arr.sort(reverse = True) 
    num = arr[0] 
    for i in range(1,n) : 
        num = num * 10 + arr[i] 
    return num ",180
"Human: Write a Python function which follows this instruction:  Given two lists operator, and operand. The first list has basic algebra operations, and the second list is a list of integers. Use the two given lists to build the algebric expression and return the evaluation of this expression.  The basic algebra operations: Addition ( + ) Subtraction ( - ) Multiplication ( * ) Floor division ( // ) Exponentiation ( ** )  Note: The length of operator list is equal to the length of operand list minus one. Operand is a list of of non-negative integers. Operator list has at least one operator, and operand list has at least two operands.  Assistant: ","
def do_algebra(operator, operand):
    expression = str(operand[0])
    for oprt, oprn in zip(operator, operand[1:]):
        expression+= oprt + str(oprn)
    return eval(expression)",160
"Human: Write a Python function which follows this instruction: For a given string, flip lowercase characters to uppercase and uppercase to lowercase. Assistant: ","
def flip_case(string: str) -> str:
    return string.swapcase()",27
"Human: Write a Python function which follows this instruction:  Write a function that accepts two lists of strings and returns the list that has total number of chars in the all strings of the list less than the other list.  if the two lists have the same number of chars, return the first list. Assistant: ","
def total_match(lst1, lst2):
    l1 = 0
    for st in lst1:
        l1 += len(st)
    
    l2 = 0
    for st in lst2:
        l2 += len(st)
    
    if l1 <= l2:
        return lst1
    else:
        return lst2",74
Human: Write a Python function which follows this instruction:  Write a function to find the difference of the first even and first odd number of a given list. Assistant: ,"def diff_even_odd(list1):
    first_even = next((el for el in list1 if el%2==0),-1)
    first_odd = next((el for el in list1 if el%2!=0),-1)
    return (first_even-first_odd)",464
Human: Write a Python function which follows this instruction:  Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/ Assistant: ,"def tuple_to_dict(test_tup):
  res = dict(test_tup[idx : idx + 2] for idx in range(0, len(test_tup), 2))
  return (res) ",526
Human: Write a Python function which follows this instruction:  Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/ Assistant: ,"def rgb_to_hsv(r, g, b):
    r, g, b = r/255.0, g/255.0, b/255.0
    mx = max(r, g, b)
    mn = min(r, g, b)
    df = mx-mn
    if mx == mn:
        h = 0
    elif mx == r:
        h = (60 * ((g-b)/df) + 360) % 360
    elif mx == g:
        h = (60 * ((b-r)/df) + 120) % 360
    elif mx == b:
        h = (60 * ((r-g)/df) + 240) % 360
    if mx == 0:
        s = 0
    else:
        s = (df/mx)*100
    v = mx*100
    return h, s, v",566
Human: Write a Python function which follows this instruction:  Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits. Assistant: ,"def count_binary_seq(n): 
	nCr = 1
	res = 1
	for r in range(1, n + 1): 
		nCr = (nCr * (n + 1 - r)) / r 
		res += nCr * nCr 
	return res ",333
Human: Write a Python function which follows this instruction: Given a non-empty list of integers lst. add the even elements that are at odd indices.. Assistant: ,"
def add(lst):
    return sum([lst[i] for i in range(1, len(lst), 2) if lst[i]%2 == 0])",85
Human: Write a Python function which follows this instruction:  returns encoded string by cycling groups of three characters. Assistant: ,"
def encode_cyclic(s: str):
    return encode_cyclic(encode_cyclic(s))",38
Human: Write a Python function which follows this instruction:  Write a function to find the maximum difference between available pairs in the given tuple list. Assistant: ,"def max_difference(test_list):
  temp = [abs(b - a) for a, b in test_list]
  res = max(temp)
  return (res) ",185
Human: Write a Python function which follows this instruction:  Write a function to find the cumulative sum of all the values that are present in the given tuple list. Assistant: ,"def cummulative_sum(test_list):
  res = sum(map(sum, test_list))
  return (res)",481
Human: Write a Python function which follows this instruction:  Write a function to find all possible combinations of the elements of a given list. Assistant: ,"def combinations_list(list1):
    if len(list1) == 0:
        return [[]]
    result = []
    for el in combinations_list(list1[1:]):
        result += [el, el+[list1[0]]]
    return result",413
"Human: Write a Python function which follows this instruction: For a given list of input numbers, calculate Mean Absolute Deviation around the mean of this dataset. Mean Absolute Deviation is the average absolute difference between each element and a centerpoint (mean in this case): MAD = average | x - x_mean | Assistant: ","from typing import List

def mean_absolute_deviation(numbers: List[float]) -> float:
    mean = sum(numbers) / len(numbers)
    return sum(abs(x - mean) for x in numbers) / len(numbers)",4
"Human: Write a Python function which follows this instruction:  Given a string s, count the number of uppercase vowels in even indices. Assistant: ","
def count_upper(s):
    count = 0
    for i in range(0,len(s),2):
        if s[i] in ""AEIOU"":
            count += 1
    return count",98
Human: Write a Python function which follows this instruction:  Write a function that returns the list in a list of lists whose sum of elements is the highest. Assistant: ,"def max_sum_list(lists):
 return max(lists, key=sum)",586
Human: Write a Python function which follows this instruction:  Write a function to convert all possible convertible elements in a list of lists to floats. Assistant: ,"def list_to_float(test_list):
  res = []
  for tup in test_list:
    temp = []
    for ele in tup:
      if ele.isalpha():
        temp.append(ele)
      else:
        temp.append(float(ele))
    res.append((temp[0],temp[1])) 
  return res",231
"Human: Write a Python function which follows this instruction:  Write a function that matches a string that has an 'a' followed by anything, ending in 'b'. Assistant: ","import re
def text_starta_endb(text):
        patterns = 'a.*?b$'
        return re.search(patterns,  text)",576
Human: Write a Python function which follows this instruction:  Write a function to check whether a given string is a decimal number with a precision of 2. Assistant: ,"def is_decimal(num):
    import re
    dnumre = re.compile(r""""""^[0-9]+(\.[0-9]{1,2})?$"""""")
    result = dnumre.search(num)
    return bool(result)",545
Human: Write a Python function which follows this instruction: Input are two strings a and b consisting only of 1s and 0s. Perform binary XOR on these inputs and return result also as a string. Assistant: ,"from typing import List

def string_xor(a: str, b: str) -> str:
    def xor(i, j):
        if i == j:
            return '0'
        else:
            return '1'

    return ''.join(xor(x, y) for x, y in zip(a, b))",11
Human: Write a Python function which follows this instruction:  Write a function to replace whitespaces with an underscore and vice versa in a given string. Assistant: ,"def replace_spaces(text):
  return """".join("" "" if c == ""_"" else (""_"" if c == "" "" else c) for c in text)",497
"Human: Write a Python function which follows this instruction:  Given a list of numbers, return whether or not they are sorted in ascending order. If list has more than 1 duplicate of the same number, return False. Assume no negative numbers and only integers. Assistant: ","
def is_sorted(lst):
    count_digit = dict([(i, 0) for i in lst])
    for i in lst:
        count_digit[i]+=1 
    if any(count_digit[i] > 2 for i in lst):
        return False
    if all(lst[i-1] <= lst[i] for i in range(1, len(lst))):
        return True
    else:
        return False
    
    ",126
"Human: Write a Python function which follows this instruction:  Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25 Assistant: ","
def split_words(txt):
    if "" "" in txt:
        return txt.split()
    elif "","" in txt:
        return txt.replace(',',' ').split()
    else:
        return len([i for i in txt if i.islower() and ord(i)%2 == 0])",125
Human: Write a Python function which follows this instruction: Add two numbers x and y Assistant: ,"
def add(x: int, y: int):
    return x + y",53
"Human: Write a Python function which follows this instruction:  Write a function that takes a message, and encodes in such a way that it swaps case of all letters, replaces all vowels in the message with the letter that appears 2 places ahead of that vowel in the english alphabet. Assume only letters. Assistant: ","
def encode(message):
    vowels = ""aeiouAEIOU""
    vowels_replace = dict([(i, chr(ord(i) + 2)) for i in vowels])
    message = message.swapcase()
    return ''.join([vowels_replace[i] if i in vowels else i for i in message])",93
"Human: Write a Python function which follows this instruction: This function takes a list l and returns a list l' such that l' is identical to l in the indicies that are not divisible by three, while its values at the indicies that are divisible by three are equal to the values of the corresponding indicies of l, but sorted. Assistant: ","
def sort_third(l: list):
    l = list(l)
    l[::3] = sorted(l[::3])
    return l",33
Human: Write a Python function which follows this instruction:  Write a function to find the maximum value in a given heterogeneous list. Assistant: ,"def max_val(listval):
     max_val = max(i for i in listval if isinstance(i, int)) 
     return(max_val)",328
"Human: Write a Python function which follows this instruction:  pairs_sum_to_zero takes a list of integers as an input. it returns True if there are two distinct elements in the list that sum to zero, and False otherwise. Assistant: ","
def pairs_sum_to_zero(l):
    for i, l1 in enumerate(l):
        for j in range(i + 1, len(l)):
            if l1 + l[j] == 0:
                return True
    return False",43
"Human: Write a Python function which follows this instruction: Input is a space-delimited string of numberals from 'zero' to 'nine'. Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'. Return the string with numbers sorted from smallest to largest Assistant: ","from typing import List

def sort_numbers(numbers: str) -> str:
    value_map = {
        'zero': 0,
        'one': 1,
        'two': 2,
        'three': 3,
        'four': 4,
        'five': 5,
        'six': 6,
        'seven': 7,
        'eight': 8,
        'nine': 9
    }
    return ' '.join(sorted([x for x in numbers.split(' ') if x], key=lambda x: value_map[x]))",19
Human: Write a Python function which follows this instruction: You are given a list of integers. You need to find the largest prime value and return the sum of its digits. Assistant: ,"def skjkasdkd(lst):
    def isPrime(n):
        for i in range(2,int(n**0.5)+1):
            if n%i==0:
                return False

        return True
    maxx = 0
    i = 0
    while i < len(lst):
        if(lst[i] > maxx and isPrime(lst[i])):
            maxx = lst[i]
        i+=1
    result = sum(int(digit) for digit in str(maxx))
    return result
",94
Human: Write a Python function which follows this instruction: Your task is to write a function that returns true if a number x is a simple power of n and false in other cases. x is a simple power of n if n**int=x Assistant: ,"
def is_simple_power(x, n):
    if (n == 1): 
        return (x == 1) 
    power = 1
    while (power < x): 
        power = power * n 
    return (power == x) ",76
Human: Write a Python function which follows this instruction:  Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php Assistant: ,"def geometric_sum(n):
  if n < 0:
    return 0
  else:
    return 1 / (pow(2, n)) + geometric_sum(n - 1)",524
Human: Write a Python function which follows this instruction:  Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list. Assistant: ,"def max_product_tuple(list1):
    result_max = max([abs(x * y) for x, y in list1] )
    return result_max",234
Human: Write a Python function which follows this instruction:  Write a function to extract all the adjacent coordinates of the given coordinate tuple. Assistant: ,"def adjac(ele, sub = []): 
  if not ele: 
     yield sub 
  else: 
     yield from [idx for j in range(ele[0] - 1, ele[0] + 2) 
                for idx in adjac(ele[1:], sub + [j])] 
def get_coordinates(test_tup):
  return list(adjac(test_tup))",496
Human: Write a Python function which follows this instruction:  Write a function that matches a string that has an a followed by three 'b'. Assistant: ,"import re
def text_match_three(text):
        patterns = 'ab{3}?'
        return re.search(patterns,  text)",570
Human: Write a Python function which follows this instruction:  Write a function to find the nth hexagonal number. Assistant: ,"def hexagonal_num(n): 
	return n*(2*n - 1) ",246
Human: Write a Python function which follows this instruction:  Write a function which takes two tuples of the same length and performs the element wise modulo. Assistant: ,"def tuple_modulo(test_tup1, test_tup2):
  res = tuple(ele1 % ele2 for ele1, ele2 in zip(test_tup1, test_tup2)) 
  return (res) ",483
Human: Write a Python function which follows this instruction:  Write a function to find the second smallest number in a list. Assistant: ,"def second_smallest(numbers):
  unique_numbers = list(set(numbers))
  unique_numbers.sort()
  if len(unique_numbers) < 2:
    return None
  else:
    return unique_numbers[1]",541
"Human: Write a Python function which follows this instruction: "" This function will take a list of integers. For all entries in the list, the function shall square the integer entry if its index is a multiple of 3 and will cube the integer entry if its index is a multiple of 4 and not a multiple of 3. The function will not change the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries. Assistant: ","
def sum_squares(lst):
    result =[]
    for i in range(len(lst)):
        if i %3 == 0:
            result.append(lst[i]**2)
        elif i % 4 == 0 and i%3 != 0:
            result.append(lst[i]**3)
        else:
            result.append(lst[i])
    return sum(result)",142
"Human: Write a Python function which follows this instruction:  Write a function to replace all occurrences of spaces, commas, or dots with a colon. Assistant: ","import re
def replace_specialchar(text):
 return (re.sub(""[ ,.]"", "":"", text))
",518
"Human: Write a Python function which follows this instruction:  Given an array of integers nums, find the minimum sum of any non-empty sub-array of nums. Assistant: ","
def minSubArraySum(nums):
    max_sum = 0
    s = 0
    for num in nums:
        s += -num
        if (s < 0):
            s = 0
        max_sum = max(s, max_sum)
    if max_sum == 0:
        max_sum = max(-i for i in nums)
    min_sum = -max_sum
    return min_sum",114
"Human: Write a Python function which follows this instruction:  The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum. Assistant: ","def filter_data(students,h,w):
    result = {k: s for k, s in students.items() if s[0] >=h and s[1] >=w}
    return result    ",510
Human: Write a Python function which follows this instruction:  Write a function to count the number of sublists containing a particular element. Assistant: ,"def count_element_in_list(list1, x): 
    ctr = 0
    for i in range(len(list1)): 
        if x in list1[i]: 
            ctr+= 1          
    return ctr",377
Human: Write a Python function which follows this instruction:  Write a function to find the intersection of two arrays. Assistant: ,"def intersection_array(array_nums1,array_nums2):
 result = list(filter(lambda x: x in array_nums1, array_nums2)) 
 return result",289
Human: Write a Python function which follows this instruction:  Write a python function to find element at a given index after number of rotations. Assistant: ,"def find_Element(arr,ranges,rotations,index) :  
    for i in range(rotations - 1,-1,-1 ) : 
        left = ranges[i][0] 
        right = ranges[i][1] 
        if (left <= index and right >= index) : 
            if (index == left) : 
                index = right 
            else : 
                index = index - 1 
    return arr[index] ",335
"Human: Write a Python function which follows this instruction:  You're a hungry rabbit, and you already have eaten a certain number of carrots, but now you need to eat more carrots to complete the day's meals. you should return an array of [ total number of eaten carrots after your meals, the number of carrots left after your meals ] if there are not enough remaining carrots, you will eat all remaining carrots, but will still be hungry.  Variables: @number : integer the number of carrots that you have eaten. @need : integer the number of carrots that you need to eat. @remaining : integer the number of remaining carrots thet exist in stock  Constrain: * 0 <= number <= 1000 * 0 <= need <= 1000 * 0 <= remaining <= 1000  Have fun :) Assistant: ","
def eat(number, need, remaining):
    if(need <= remaining):
        return [ number + need , remaining-need ]
    else:
        return [ number + remaining , 0]",159
Human: Write a Python function which follows this instruction:  Write a python function to count the number of non-empty substrings of a given string. Assistant: ,"def number_of_substrings(str): 
	str_len = len(str); 
	return int(str_len * (str_len + 1) / 2); ",280
"Human: Write a Python function which follows this instruction:  Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i . Assistant: ","def max_sum_increasing_subseq(a, n, index, k):
	dp = [[0 for i in range(n)] 
			for i in range(n)]
	for i in range(n):
		if a[i] > a[0]:
			dp[0][i] = a[i] + a[0]
		else:
			dp[0][i] = a[i]
	for i in range(1, n):
		for j in range(n):
			if a[j] > a[i] and j > i:
				if dp[i - 1][i] + a[j] > dp[i - 1][j]:
					dp[i][j] = dp[i - 1][i] + a[j]
				else:
					dp[i][j] = dp[i - 1][j]
			else:
				dp[i][j] = dp[i - 1][j]
	return dp[index][k]",337
Human: Write a Python function which follows this instruction:  Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple. Assistant: ,"def check_smaller(test_tup1, test_tup2):
  return all(x > y for x, y in zip(test_tup1, test_tup2))",590
Human: Write a Python function which follows this instruction:  Write a python function to find whether a number is divisible by 11. Assistant: ,"def is_Diff(n): 
    return (n % 11 == 0) ",197
Human: Write a Python function which follows this instruction:  Write a function to find whether all the given tuples have equal length or not. Assistant: ,"def find_equal_tuple(Input):
  k = 0 if not Input else len(Input[0])
  flag = 1
  for tuple in Input:
    if len(tuple) != k:
      flag = 0
      break
  return flag
def get_equal(Input):
  return find_equal_tuple(Input) == 1",192
Human: Write a Python function which follows this instruction:  Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. Assistant: ,"def average_tuple(nums):
    result = [sum(x) / len(x) for x in zip(*nums)]
    return result",482
Human: Write a Python function which follows this instruction:  Write a function to create a new tuple from the given string and list. Assistant: ,"def new_tuple(test_list, test_str):
  return tuple(test_list + [test_str])",571
Human: Write a Python function which follows this instruction:  Write a python function to count the occurence of all elements of list in a tuple. Assistant: ,"from collections import Counter 
def count_Occurrence(tup, lst): 
    count = 0
    for item in tup: 
        if item in lst: 
            count+= 1 
    return count  ",398
"Human: Write a Python function which follows this instruction: For a given list of integers, return a tuple consisting of a sum and a product of all the integers in a list. Empty sum should be equal to 0 and empty product should be equal to 1. Assistant: ","from typing import List, Tuple

def sum_product(numbers: List[int]) -> Tuple[int, int]:
    sum_value = 0
    prod_value = 1

    for n in numbers:
        sum_value += n
        prod_value *= n
    return sum_value, prod_value",8
Human: Write a Python function which follows this instruction:  Write a function to perform index wise multiplication of tuple elements in the given two tuples. Assistant: ,"def index_multiplication(test_tup1, test_tup2):
  res = tuple(tuple(a * b for a, b in zip(tup1, tup2))
   for tup1, tup2 in zip(test_tup1, test_tup2))
  return (res) ",397
Human: Write a Python function which follows this instruction:  Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/ Assistant: ,"def check_min_heap_helper(arr, i):
    if 2 * i + 2 > len(arr):
        return True
    left_child = (arr[i] <= arr[2 * i + 1]) and check_min_heap_helper(arr, 2 * i + 1)
    right_child = (2 * i + 2 == len(arr)) or (arr[i] <= arr[2 * i + 2] 
                                      and check_min_heap_helper(arr, 2 * i + 2))
    return left_child and right_child

def check_min_heap(arr):
  return check_min_heap_helper(arr, 0)",537
Human: Write a Python function which follows this instruction:  Write a function to find the common elements in given nested lists. Assistant: ,"def common_in_nested_lists(nestedlist):
    result = list(set.intersection(*map(set, nestedlist)))
    return result",227
Human: Write a Python function which follows this instruction:  Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ Assistant: ,"def sum_Of_Subarray_Prod(arr):
    ans = 0
    res = 0
    i = len(arr) - 1
    while (i >= 0):
        incr = arr[i]*(1 + res)
        ans += incr
        res = incr
        i -= 1
    return (ans)",520
"Human: Write a Python function which follows this instruction: You are given two intervals, where each interval is a pair of integers. For example, interval = (start, end) = (1, 2). The given intervals are closed which means that the interval (start, end) includes both start and end. For each given interval, it is assumed that its start is less or equal its end. Your task is to determine whether the length of intersection of these two intervals is a prime number. Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3) which its length is 1, which not a prime number. If the length of the intersection is a prime number, return ""YES"", otherwise, return ""NO"". If the two intervals don't intersect, return ""NO"". Assistant: ","
def intersection(interval1, interval2):
    def is_prime(num):
        if num == 1 or num == 0:
            return False
        if num == 2:
            return True
        for i in range(2, num):
            if num%i == 0:
                return False
        return True

    l = max(interval1[0], interval2[0])
    r = min(interval1[1], interval2[1])
    length = r - l
    if length > 0 and is_prime(length):
        return ""YES""
    return ""NO""",127
"Human: Write a Python function which follows this instruction:  Write a function to find the n largest integers from a given list of numbers, returned in descending order. Assistant: ","import heapq as hq
def heap_queue_largest(nums,n):
  largest_nums = hq.nlargest(n, nums)
  return largest_nums",166
Human: Write a Python function which follows this instruction:  Write a function to sort a list of elements. Assistant: ,"def pancake_sort(nums):
    arr_len = len(nums)
    while arr_len > 1:
        mi = nums.index(max(nums[0:arr_len]))
        nums = nums[mi::-1] + nums[mi+1:len(nums)]
        nums = nums[arr_len-1::-1] + nums[arr_len:len(nums)]
        arr_len -= 1
    return nums",251
"Human: Write a Python function which follows this instruction:  You are given a non-empty list of positive integers. Return the greatest integer that is greater than zero, and has a frequency greater than or equal to the value of the integer itself. The frequency of an integer is the number of times it appears in the list. If no such a value exist, return -1. Assistant: ","
def search(lst):
    frq = [0] * (max(lst) + 1)
    for i in lst:
        frq[i] += 1;

    ans = -1
    for i in range(1, len(frq)):
        if frq[i] >= i:
            ans = i
    
    return ans",69
